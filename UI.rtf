{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 STHeitiSC-Light;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset134 PingFangSC-Regular;\f4\fnil\fcharset0 AppleColorEmoji;}
{\colortbl;\red255\green255\blue255;\red68\green137\blue147;\red92\green38\blue153;\red98\green147\blue254;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww19200\viewh15840\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 http://github.ibireme.com/github/list/ios/  \

\f1 \'bf\'aa\'d4\'b4\'b5\'c4\'cf\'ee\'c4\'bf
\f0\fs24 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1 \cf0 \'c9\'e8\'d6\'c3\'d0\'a1\'d4\'b2\'b5\'e3\'ba\'cd\'c6\'c1\'c4\'bb\'d2\'bb\'d1\'f9\'bb\'ac\'b6\'af
\f0 \
\pard\tx674\pardeftab674\pardirnatural\partightenfactor0

\f2\fs28 \cf2 \CocoaLigature0 _pageControl\cf0 .\cf3 currentPage\cf0   = scrollView.\cf3 contentOffset\cf0 .\cf3 x\cf0 /scrollView.\cf3 frame\cf0 .\cf3 size\cf0 .\cf3 width\cf0 ;
\f0\fs24 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\fs28 \cf4 //
\f1 \'bb\'f1\'c8\'a1\'b5\'b1\'c7\'b0\'c6\'c1\'c4\'bb\'b3\'df\'b4\'e7\'b4\'f3\'d0\'a1\'d2\'d4\'bc\'b0\'ce\'bb\'d6\'c3\'b5\'c4\'b7\'bd\'b7\'a8
\f2 \

\f1 \'d1\'d5\'c9\'ab\'b8\'df\'c1\'c1\'c0\'b6
\f2 \
    NSLog(@"%f %f %f %f",self.view.frame.origin.x, self.view.frame.origin.y, self.view.frame.size.width, self.view.frame.size.height);\
\
//UIColor(CGColorRef)\
	_layer.backgroundColor = [UIColor colorWithRed:0/255.0 green:0/255.0 blue:0/255.0 alpha:1].CGColor;\
\
#define VALUE arc4random() % 256 / 255.0f\
self.view.backgroundColor = [UIColor colorWithRed:VALUE green:VALUE blue:VALUE alpha:1];\
\
    CGFloat red = arc4random() % 256;\
    CGFloat gre = arc4random() % 256;\
    CGFloat blu = arc4random() % 256;\
    view.backgroundColor = [UIColor colorWithRed:red/255 green:gre/255 blue:blu/255 alpha:1];\
\
//
\f1 \'c9\'e8\'d6\'c3\'b4\'f3\'d0\'a1
\f2 (bounds)\
	_layer.bounds = CGRectMake(0, 0, 50, 50);\
\

\f1 \'d7\'d6\'cc\'e5
\f2  (label)\
//
\f1 \'d7\'d6\'cc\'e5\'b4\'f3\'d0\'a1
\f2 \
    label.font = [UIFont systemFontOfSize:25];\
//
\f1 \'c9\'e8\'d6\'c3
\f2 label
\f1 \'b5\'c4\'d7\'d6\'cc\'e5\'ce\'aa\'b4\'d6\'cc\'e5
\f2 \
    label.font = [UIFont boldSystemFontOfSize:25];\
//
\f1 \'c9\'e8\'d6\'c3\'d0\'b1\'cc\'e5
\f2  
\f1 \'b2\'bb\'d6\'a7\'b3\'d6\'d6\'d0\'ce\'c4
\f2 \
    label.font = [UIFont italicSystemFontOfSize:25];\
//
\f1 \'d3\'c3\'cf\'b5\'cd\'b3\'d6\'a7\'b3\'d6\'b5\'c4\'d7\'d6\'cc\'e5\'c9\'e8\'d6\'c3
\f2 \
    label.font = [UIFont fontWithName:@"Noteworthy" size:25];\
\
//
\f1 \'c9\'e8\'d6\'c3
\f2 label
\f1 \'ce\'c4\'d7\'d6\'c4\'da\'c8\'dd\'d7\'d4\'ca\'ca\'d3\'a6\'bf\'ed\'b6\'c8
\f2   
\f1 \'bf\'ed\'b6\'c8\'b2\'bb\'b9\'bb\'a3\'ac\'d7\'d6\'cc\'e5\'cb\'f5\'d0\'a1\'c0\'b4\'cf\'d4\'ca\'be\'a3\'bb\'bf\'ed\'b6\'c8\'d7\'e3\'b9\'bb\'a3\'ac\'d7\'d6\'cc\'e5\'b2\'bb\'bb\'e1\'b1\'e4\'b4\'f3
\f2 \
    label.adjustsFontSizeToFitWidth = YES;\
//
\f1 \'c9\'e8\'d6\'c3
\f2 label
\f1 \'c4\'da\'c8\'dd\'b6\'d4\'c6\'eb\'b5\'c4\'b7\'bd\'ca\'bd
\f2 \
    label.textAlignment = NSTextAlignmentLeft;\
//
\f1 \'c9\'e8\'d6\'c3
\f2 label
\f1 \'b5\'c4\'d6\'d0\'d0\'c4\'b5\'e3
\f2 \
	label.center = self.view.center;\

\f3 \'b0\'a1\'ca\'b5\'b4\'f2\'ca\'b5\'b5\'c4
\f2 \
button\
//button
\f1 \'d7\'a2\'b2\'e1\'ca\'c2\'bc\'fe
\f2 (
\f1 \'cc\'ed\'bc\'d3\'ca\'c2\'bc\'fe
\f2 )\
    [button addTarget:self action:@selector(btnClick:) forControlEvents:UIControlEventTouchUpInside];\
//
\f1 \'c9\'e8\'d6\'c3
\f2 button
\f1 \'b1\'ea\'cc\'e2\'ce\'c4\'d7\'d6\'b5\'c4\'b4\'f3\'d0\'a1
\f2  
\f1 \'b4\'d6\'cc\'e5
\f2 \
    button.titleLabel.font = [UIFont boldSystemFontOfSize:15];\
//
\f1 \'c9\'e8\'d6\'c3
\f2 button
\f1 \'b1\'ea\'cc\'e2\'ce\'c4\'d7\'d6\'d7\'d4\'ca\'ca\'d3\'a6\'bf\'ed\'b6\'c8
\f2  
\f1 \'ba\'cd
\f2 UILabel
\f1 \'b6\'d4\'b5\'c4\'d7\'d4\'ca\'ca\'d3\'a6\'d4\'ad\'c0\'ed\'d2\'bb\'d1\'f9
\f2 \
    button.titleLabel.adjustsFontSizeToFitWidth = YES;\
//
\f1 \'d4\'b2\'bd\'c7
\f2 \
    button.layer.cornerRadius = 10;\
    button.layer.borderWidth = 2;\
\
//
\f1 \'c9\'e8\'d6\'c3\'bd\'fb\'d6\'b9\'d7\'b4\'cc\'ac\'cf\'c2\'b5\'c4\'b1\'ea\'cc\'e2\'ce\'c4\'d7\'d6
\f2 \
//
\f1 \'b5\'ab\'ca\'c7\'bd\'fb\'d6\'b9\'d7\'b4\'cc\'ac\'cf\'c2\'b1\'d8\'d0\'eb\'c9\'e8\'d6\'c3
\f2 button
\f1 \'b5\'c4
\f2 enable
\f1 \'ca\'f4\'d0\'d4
\f2 (BOOL)
\f1 \'ce\'aa
\f2 NO\
//
\f1 \'c4\'ac\'c8\'cf\'ca\'c7
\f2 YES\
    [button setTitle:@"
\f4 \uc0\u55357 \u57003 
\f2 " forState:UIControlStateDisabled];\
    button.enabled = NO;\
    [button setTitleColor:[UIColor redColor] forState:UIControlStateDisabled];\
\
//
\f1 \'c9\'e8\'d6\'c3
\f2 button
\f1 \'c7\'b0\'be\'b0\'cd\'bc\'c6\'ac
\f2   
\f1 \'b2\'ce\'ca\'fd\'ce\'aa\'d5\'fd\'b3\'a3\'d7\'b4\'cc\'ac\'cf\'c2
\f2 \
//
\f1 \'cd\'bc\'c6\'ac\'b2\'bb\'bb\'e1\'d0\'ce\'b1\'e4
\f2  
\f1 \'b5\'b1
\f2 button
\f1 \'b2\'bb\'b9\'bb\'bf\'ed\'ca\'b1\'a3\'ac\'cd\'bc\'c6\'ac\'bb\'e1\'b0\'d1\'ce\'c4\'d7\'d6\'bc\'b7\'b5\'bd\'d3\'d2\'b1\'df
\f2 \
//
\f1 \'c9\'e8\'d6\'c3\'c7\'b0\'be\'b0\'cd\'bc\'c6\'ac\'a3\'ac\'b5\'b1\'b0\'b4\'c5\'a5\'b3\'df\'b4\'e7\'b1\'c8\'cd\'bc\'c6\'ac\'cf\'f1\'cb\'d8\'b4\'f3\'ca\'b1\'a3\'ac\'cd\'bc\'c6\'ac\'b2\'bb\'bb\'e1\'b7\'a2\'c9\'fa\'d0\'ce\'b1\'e4
\f2 \
    [button setImage:[UIImage imageNamed:@"34.png"] forState:UIControlStateNormal];\
//
\f1 \'c9\'e8\'d6\'c3
\f2 button
\f1 \'b1\'b3\'be\'b0\'cd\'bc\'c6\'ac
\f2  
\f1 \'b4\'cb\'ca\'b1\'b0\'b4\'c5\'a5\'b3\'df\'b4\'e7\'b1\'c8\'cd\'bc\'c6\'ac\'b4\'f3\'ca\'b1\'a3\'ac\'cd\'bc\'c6\'ac\'bb\'e1\'b7\'a2\'c9\'fa\'d0\'ce\'b1\'e4
\f2 \
    UIImage *image1 = [UIImage imageWithContentsOfFile:@"/Users/qianfeng/Desktop/iOS1501wny/UIday02/UIButton/imageStone/3.png"];\
    [button setBackgroundImage:image1 forState:UIControlStateNormal];\
\
//button
\f1 \'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe
\f2 \
-(void)doveFly:(UIButton *)button\{\
    UIImageView *imageView = (id)[self.view viewWithTag:12];\
    if ([button.titleLabel.text isEqualToString:@"Pause"]) \{\
        [_timer setFireDate:[NSDate distantFuture]];\
        [button setTitle:@"FLY" forState:UIControlStateNormal];\
        [imageView stopAnimating];\
    \}else\{\
        [_timer setFireDate:[NSDate distantPast]];\
        [button setTitle:@"Pause" forState:UIControlStateNormal];\
        [imageView starAnimating];\
    \}\
\}\
\
NSTimer\
\{\
    NSTimer *_timer;\
\}\
\
_timer = [NSTimer scheduledTimerWithTimeInterval:0.02 target:self selector:@selector(fly) userInfo:nil repeats:YES];\
\
//
\f1 \'b6\'a8\'ca\'b1\'c6\'f7\'b7\'bd\'b7\'a8
\f2 (Button
\f1 \'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe\'d6\'d0\'d2\'b2\'b0\'fc\'ba\'ac
\f2 )\
-(void)fly\{\
    static int x = 1, y = 2;\
    UIImageView *imageView = (id)[self.view viewWithTag:12];\
    CGRect frame = imageView.frame;\
    frame.origin.x += x;\
    frame.origin.y -= y;\
    \
    if (frame.origin.x > self.view.frame.size.width) \{\
        frame.origin.x = 0;\
        frame.origin.y = self.view.frame.size.height;\
    \}\
    imageView.frame = frame;\
\}\
\
\

\f1 \'b6\'af\'bb\'ad
\f2 (animation)\
//
\f1 \'c9\'e8\'d6\'c3
\f2 imageView(
\f1 \'b7\'c5\'d6\'c3\'cd\'bc\'c6\'ac\'b5\'c4
\f2 )
\f1 \'b6\'d4\'cf\'f3
\f2  
\f1 \'b2\'a2\'c7\'d2\'c9\'e8\'d6\'c3
\f2 imageView
\f1 \'b5\'c4\'ce\'bb\'d6\'c3\'ba\'cd\'b4\'f3\'d0\'a1
\f2 \
    UIImageView *imageView = [[UIImageView alloc] initWithFrame:CGRectMake(50, 100, 60, 60)];\
\
self.view.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"back2.jpg"]];\
    UIImageView *imageView = [[UIImageView alloc] initWithFrame:CGRectMake(0, self.view.frame.size.height, 60, 60)];\
    imageView.tag = 12;\
    imageView.frame = CGRectMake(imageView.frame.origin.x, imageView.frame.origin.y, imageView.frame.size.width, imageView.frame.size.height);\
//
\f1 \'b5\'f7\'d3\'c3
\f2 animation
\f1 \'b7\'bd\'b7\'a8
\f2 \
[self animation];\
\
//
\f1 \'b6\'af\'bb\'ad\'b7\'bd\'b7\'a8
\f2 \
-(void)animation\{\
    NSMutableArray *imageArray = [[NSMutableArray alloc] initWithCapacity:20];\
    for (int i = 1; i <= 18; i++) \{\
        NSString *imagePath = [[NSBundle mainBundle]pathForResource:[NSString stringWithFormat:@"DOVE %d",i] ofType:@"png"];\
        NSData *imageData = [NSData dataWithContentsOfFile:imagePath];\
        UIImage *image = [UIImage imageWithData:imageData];\
        [imageArray addObject:image];\
    \}\
    UIImageView *imageView = (id)[self.view viewWithTag:12];\
//
\f1 \'b0\'d1\'d7\'b0\'d3\'d0\'cd\'bc\'c6\'ac\'b5\'c4\'ca\'fd\'d7\'e9\'b8\'b3\'d6\'b5\'b8\'f8
\f2 imageView
\f1 \'b5\'c4\'b6\'af\'bb\'ad\'ca\'fd\'d7\'e9
\f2 \
    imageView.animationImages = imageArray;\
//
\f1 \'b6\'af\'bb\'ad\'d4\'cb\'d0\'d0\'ca\'b1\'bc\'e4
\f2 \
    imageView.animationDuration = 1;\
//
\f1 \'c9\'e8\'d6\'c3\'b6\'af\'bb\'ad\'d1\'d3\'b3\'d9\'ca\'b1\'bc\'e4
\f2 \
    [UIView setAnimationDelay:0.1];\
//
\f1 \'b6\'af\'bb\'ad\'d1\'ad\'bb\'b7\'b4\'ce\'ca\'fd
\f2   0
\f1 \'b1\'ed\'ca\'be\'ce\'de\'cf\'de\'d1\'ad\'bb\'b7
\f2  
\f1 \'c4\'ac\'c8\'cf\'ce\'aa
\f2 0\
    imageView.animationRepeatCount = 0;\
//imageView
\f1 \'bf\'aa\'ca\'bc\'b6\'af\'bb\'ad
\f2 \
    [imageView startAnimating];\
\}\
\

\f1 \'b4\'b4\'bd\'a8\'b6\'af\'bb\'ad
\f2 \
//
\f1 \'d2\'bb\'be\'e4\'b8\'e3\'b6\'a8
\f2   
\f1 \'d3\'c3
\f2 UIView
\f1 \'b5\'c4\'c0\'e0\'b7\'bd\'b7\'a8\'b5\'f7\'d3\'c3
\f2 \
    [UIView animateWithDuration:1 animations:^\{\
        view.frame = CGRectMake(100, 150, 200, 200);\
        view.alpha = 0.8;\
        view.backgroundColor = [UIColor orangeColor];\
    \} completion:^(BOOL finished)\{\
        [UIView animateWithDuration:1 animations:^\{\
            view.frame = self.view.bounds;\
            view.alpha = 1;\
            view.backgroundColor = [UIColor yellowColor];\
        \} completion:^(BOOL finished)\{\
            NSLog(@"
\f1 \'b6\'af\'bb\'ad\'cd\'ea\'b3\'c9
\f2 ");\
        \}];\
    \}];\
\

\f1 \'c9\'e8\'d6\'c3\'d2\'f5\'d3\'b0
\f2 \
    _layer.shadowOffset = CGSizeMake(3, 3);\
    _layer.shadowColor = [UIColor redColor].CGColor;\
    _layer.shadowOpacity = 0.5;\
\
UIView
\f1 \'b9\'d8\'d3\'da\'d7\'f8\'b1\'ea
\f2 (label)\
-(void)aboutFrame\{\
//
\f1 \'c9\'e8\'d6\'c3
\f2 view
\f1 \'b5\'c4\'d6\'d0\'d0\'c4\'b5\'e3
\f2 \
    //CGPointMake(0, 0) == CGPointZero\
//    view.center = CGPointMake(100, 100);\
    view.center = self.view.center;\
//
\f1 \'c9\'e8\'d6\'c3
\f2 view
\f1 \'b5\'c4\'b1\'df\'bd\'e7
\f2  
\f1 \'bf\'ed\'ba\'cd\'b8\'df
\f2 \
    view.bounds = CGRectMake(0, 0, 100, 100);\
//
\f1 \'cd\'b8\'c3\'f7\'b6\'c8
\f2  0-1
\f1 \'d6\'ae\'bc\'e4
\f2  0
\f1 \'ce\'aa\'cd\'b8\'c3\'f7\'a3\'ac
\f2 1
\f1 \'ce\'aa\'b2\'bb\'cd\'b8\'c3\'f7
\f2 \
    view.alpha = 0.1;\
\
//view
\f1 \'b5\'c4\'d0\'ce\'b1\'e4
\f2 \
//
\f1 \'b4\'ab\'b5\'dd\'b5\'c4\'b2\'ce\'ca\'fd
\f2  
\f1 \'b5\'da\'d2\'bb\'b8\'f6\'b2\'ce\'ca\'fd
\f2  
\f1 \'c0\'ad\'c9\'ec\'bf\'ed\'b5\'c4\'b1\'b6\'ca\'fd
\f2 \
//         
\f1 \'b5\'da\'b6\'fe\'b8\'f6\'b2\'ce\'ca\'fd
\f2  
\f1 \'c0\'ad\'c9\'ec\'b8\'df\'b5\'c4\'b1\'b6\'ca\'fd
\f2 \
//
\f1 \'b4\'ab\'b5\'dd\'b5\'c4\'b2\'ce\'ca\'fd\'bf\'c9\'ce\'aa\'b8\'ba\'ca\'fd\'a3\'ac\'c0\'ad\'c9\'ec\'d0\'ce\'b1\'e4\'ca\'b1\'a3\'ac\'c0\'ef\'c3\'e6\'b5\'c4\'c4\'da\'c8\'dd\'d2\'bb\'c6\'f0\'d0\'ce\'b1\'e4
\f2 \
    view.transform = CGAffineTransformMakeScale(-1, -1);\
//
\f1 \'d0\'fd\'d7\'aa\'d0\'ce\'b1\'e4
\f2  
\f1 \'b4\'ab\'b5\'dd\'b2\'ce\'ca\'fd\'ce\'aa\'bb\'a1\'b6\'c8
\f2  2\uc0\u960 
\f1 \'ce\'aa\'d2\'bb\'d6\'dc\'c6\'da\'a3\'ac\'c4\'e6\'cf\'f2\'d0\'fd\'d7\'aa
\f2 \
    view.transform = CGAffineTransformMakeRotation(M_2_PI);\
\}\
\

\f1 \'b8\'b8\'d7\'d3\'ca\'d3\'cd\'bc
\f2 \
-(void)fatherAndSonView\{\
//
\f1 \'b8\'b8\'ca\'d3\'cd\'bc\'b7\'bd\'b7\'a8
\f2  
\f1 \'b2\'c3\'bc\'f4\'d7\'d3\'ca\'d3\'cd\'bc\'b3\'ac\'b3\'f6\'b8\'b8\'ca\'d3\'cd\'bc\'b5\'c4\'b1\'df\'bd\'e7
\f2 \
    suPerView.clipsToBounds = YES;\
//
\f1 \'b0\'d1\'d7\'d3\'ca\'d3\'cd\'bc\'cc\'ed\'bc\'d3\'b5\'bd\'b8\'b8\'ca\'d3\'cd\'bc\'c9\'cf
\f2  
\f1 \'d7\'d3\'ca\'d3\'cd\'bc\'b0\'d1\'b8\'b8\'ca\'d3\'cd\'bc\'b5\'c4\'d7\'f3\'c9\'cf\'bd\'c7\'b5\'b1\'ce\'aa
\f2 (0,0)\
    [suPerView addSubview:sonView];\
\}\
\

\f1 \'b2\'e3\'bc\'b6\'ca\'d3\'cd\'bc\'b9\'d8\'cf\'b5
\f2 \

\f1 \'cf\'c8\'cc\'ed\'bc\'d3\'b5\'c4\'ca\'d3\'cd\'bc\'d4\'da\'d7\'ee\'cf\'c2\'c3\'e6\'a3\'ac\'d7\'ee\'ba\'f3\'cc\'ed\'bc\'d3\'b5\'c4\'ca\'d3\'cd\'bc\'d4\'da\'d7\'ee\'c7\'b0\'c3\'e6
\f2 \
//
\f1 \'bb\'f1\'c8\'a1\'d7\'d3\'ca\'d3\'cd\'bc
\f2  
\f1 \'ca\'fd\'d7\'e9
\f2 \
    NSArray *subArray = suPerView.subviews;\
//
\f1 \'b0\'d1\'d7\'d3\'ca\'d3\'cd\'bc\'b4\'f8\'b5\'bd\'d7\'ee\'c7\'b0\'c3\'e6
\f2 \
    [suPerView bringSubviewToFront:subArray[0]];\
//
\f1 \'b0\'d1\'d7\'d3\'ca\'d3\'cd\'bc\'b7\'c5\'b5\'bd\'d7\'ee\'ba\'f3\'c3\'e6
\f2 \
    [suPerView sendSubviewToBack:subArray[2]];\
//
\f1 \'b8\'b8\'ca\'d3\'cd\'bc
\f2 alpha
\f1 \'d6\'b5\'d4\'bd\'d0\'a1\'a3\'ac\'cd\'b8\'c3\'f7\'b6\'c8\'d4\'bd\'b8\'df\'a3\'ac\'d7\'d3\'ca\'d3\'cd\'bc\'b8\'fa\'d7\'c5\'cd\'b8\'c3\'f7\'b6\'c8\'d4\'bd\'b8\'df
\f2 \
    suPerView.alpha = 0.5;   \
//
\f1 \'d2\'fe\'b2\'d8\'b8\'b8\'ca\'d3\'cd\'bc\'a3\'ac\'d7\'d3\'ca\'d3\'cd\'bc\'b8\'fa\'d7\'c5\'d2\'fe\'b2\'d8\'b5\'f4
\f2 \
    suPerView.hidden = YES;\
//
\f1 \'b5\'b1\'b8\'b8\'ca\'d3\'cd\'bc\'ce\'bb\'d6\'c3\'b8\'c4\'b1\'e4\'b5\'c4\'ca\'b1\'ba\'f2\'a3\'ac\'d7\'d3\'ca\'d3\'cd\'bc\'ce\'bb\'d6\'c3\'cb\'e6\'d6\'ae\'b8\'c4\'b1\'e4\'a3\'ac
\f2 (
\f1 \'d7\'d3\'ca\'d3\'cd\'bc
\f2 )
\f1 \'b2\'bb\'bb\'e1\'b8\'c4\'b1\'e4\'b4\'f3\'d0\'a1
\f2 \
    suPerView.frame = CGRectMake(0, 0, 250, 300);\
//
\f1 \'b1\'e9\'c0\'fa\'d7\'b0\'d3\'d0\'d7\'d3\'ca\'d3\'cd\'bc\'b5\'c4\'ca\'fd\'d7\'e9
\f2 \
    for (int i = 0; i < subArray.count; i++) \{\
//
\f1 \'bb\'f1\'c8\'a1\'b5\'bd\'b6\'d4\'d3\'a6\'b5\'c4
\f2 label\
        UILabel *label = subArray[i];\
//
\f1 \'c9\'e8\'d6\'c3
\f2 label
\f1 \'b5\'c4\'ce\'c4\'d7\'d6\'c4\'da\'c8\'dd
\f2 \
        label.text = [NSString stringWithFormat:@"
\f1 \'ce\'d2\'ca\'c7\'b5\'da
\f2 %d
\f1 \'b8\'f6\'ca\'d3\'cd\'bc
\f2 ",i+1];\
\}\
\
\

\f1 \'cd\'a3\'bf\'bf\'c4\'a3\'bf\'e9
\f2 (
\f1 \'b8\'b8\'d7\'d3\'ca\'d3\'cd\'bc\'d2\'bb\'c6\'f0\'b7\'a2\'c9\'fa\'d0\'ce\'b1\'e4
\f2 )\
-(void)stopModel\{\
    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(100, 100, 100, 100)];\
    view.backgroundColor = [UIColor blackColor];\
    [self.view addSubview:view];\
\
    UIView *view1 = [[UIView alloc] initWithFrame:CGRectMake(20, 20, 40, 40)];\
    view1.backgroundColor = [UIColor lightGrayColor];\
    [view addSubview:view1];\
view1.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight; \
\
    /*\
     UIViewAutoresizingNone                 
\f1 \'ce\'de
\f2 \
     UIViewAutoresizingFlexibleLeftMargin   
\f1 \'d7\'d4\'b6\'af\'b5\'f7\'bd\'da\'d7\'f3\'b1\'df\'a3\'ac\'d3\'d2\'b1\'df\'b1\'df\'be\'e0\'b2\'bb\'b1\'e4
\f2 \
     UIViewAutoresizingFlexibleWidth        
\f1 \'d7\'d4\'b6\'af\'b5\'f7\'bd\'da\'bf\'ed\'a3\'ac\'d7\'f3\'d3\'d2\'b1\'df\'be\'e0\'b2\'bb\'b1\'e4
\f2 \
     UIViewAutoresizingFlexibleRightMargin  
\f1 \'d7\'d4\'b6\'af\'b5\'f7\'bd\'da\'d3\'d2\'b1\'df\'a3\'ac\'d7\'f3\'b1\'df\'be\'e0\'b2\'bb\'b1\'e4
\f2 \
     UIViewAutoresizingFlexibleTopMargin    
\f1 \'d7\'d4\'b6\'af\'b5\'f7\'bd\'da\'c9\'cf\'b1\'df\'a3\'ac\'cf\'c2\'b1\'df\'be\'e0\'b2\'bb\'b1\'e4
\f2 \
     UIViewAutoresizingFlexibleHeight       
\f1 \'d7\'d4\'b6\'af\'b5\'f7\'bd\'da\'b8\'df\'b6\'c8\'a3\'ac\'c9\'cf\'cf\'c2\'b1\'df\'be\'e0\'b2\'bb\'b1\'e4
\f2 \
     UIViewAutoresizingFlexibleBottomMargin 
\f1 \'d7\'d4\'b6\'af\'b5\'f7\'bd\'da\'cf\'c2\'b1\'df\'be\'e0\'a3\'ac\'c9\'cf\'b1\'df\'be\'e0\'b2\'bb\'b1\'e4
\f2 \
     */\
    [UIView animateWithDuration:1 animations:^\{\
        view.frame = CGRectMake(100, 100, 200, 200);\
//        view.center = [self.view center];\
//        view.transform = CGAffineTransformMakeScale(2.5, 2.5);\
    \} completion:^(BOOL finished)\{\
            NSLog(@"
\f1 \'b6\'af\'bb\'ad\'cd\'ea\'b3\'c9
\f2 ");\
    \}];\
\}\
\

\f1 \'c4\'a3\'cc\'ac\'ca\'d3\'cd\'bc\'cc\'f8\'d7\'aa
\f2 \
(FirstViewController  Button
\f1 \'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe\'d6\'d0
\f2 )\
-(void)btnClicked:(UIButton *)button\{\
    CATransition *transition = [CATransition animation];\
//
\f1 \'c9\'e8\'d6\'c3\'b6\'af\'bb\'ad
\f2 \
    transition.duration = 1;\
//
\f1 \'c9\'e8\'d6\'c3\'b6\'af\'bb\'ad\'c0\'e0\'d0\'cd
\f2 \
    transition.type = @"cube";\
//
\f1 \'c9\'e8\'d6\'c3\'b6\'af\'bb\'ad\'b7\'bd\'cf\'f2
\f2 \
    transition.subtype = @"fromLeft";\
//
\f1 \'cc\'ed\'bc\'d3\'b6\'af\'bb\'ad
\f2 \
    [self.view.window.layer addAnimation:transition forKey:nil];\
//
\f1 \'b4\'b4\'bd\'a8\'d2\'aa\'cc\'f8\'d7\'aa\'d6\'c1\'b5\'c4\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7\'b6\'d4\'cf\'f3
\f2 \
    SecondViewController *secVC = [[SecondViewController alloc] init];\
\
//
\f1 \'b5\'af\'b3\'f6\'c0\'e0\'d0\'cd
\f2 \
    /*\
     UIModalTransitionStyleCoverVertical\
     UIModalTransitionStyleFlipHorizontal\
     UIModalTransitionStyleCrossDissolve\
     UIModalTransitionStylePartialCurl     
\f1 \'b7\'ad\'d2\'b3
\f2 \
     */\
//    secVC.modalTransitionStyle = UIModalTransitionStyleCoverVertical;\
    \
//
\f1 \'b5\'af\'b3\'f6\'bd\'e7\'c3\'e6
\f2  
\f1 \'b6\'af\'bb\'ad
\f2 YES
\f1 \'ce\'aa\'d3\'d0\'b6\'af\'bb\'ad\'a3\'ac
\f2 NO
\f1 \'ce\'aa\'ce\'de\'b6\'af\'bb\'ad
\f2 \
    [self presentViewController:secVC animated:NO completion:nil];\
\}\
(SecondViewController  Button
\f1 \'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe\'d6\'d0
\f2 )\
//
\f1 \'cd\'cb\'b3\'f6\'bd\'e7\'c3\'e6
\f2 \
    [self dismissViewControllerAnimated:NO completion:nil];\
\
UITextField\
//
\f1 \'c9\'e8\'d6\'c3\'ce\'c4\'b1\'be\'bf\'f2\'b5\'bd\'b1\'df\'bf\'f2
\f2 \
    /*\
    UITextBorderStyleNone          
\f1 \'c4\'ac\'c8\'cf
\f2  
\f1 \'c3\'bb\'d3\'d0
\f2 \
    UITextBorderStyleLine          
\f1 \'cf\'df\'d0\'d4\'b1\'df\'bf\'f2
\f2 \
    UITextBorderStyleBezel         
\f1 \'bc\'e2\'bd\'c7\'b1\'df\'bf\'f2
\f2 \
    UITextBorderStyleRoundedRect   
\f1 \'d4\'b2\'bd\'c7\'b1\'df\'bf\'f2
\f2 \
     */\
    textField.borderStyle = UITextBorderStyleBezel;\
\
//
\f1 \'b1\'e0\'bc\'ad\'b2\'bb\'bf\'c9\'b1\'e0\'bc\'ad\'d7\'b4\'cc\'ac\'cf\'c2\'b5\'c4\'cd\'bc\'c6\'ac
\f2  
\f1 \'d0\'e8\'c9\'e8\'d6\'c3
\f2 enable
\f1 \'b5\'c4\'ca\'f4\'d0\'d4\'ce\'aa
\f2 NO\
    textField.disabledBackground = [UIImage imageNamed:@"12.png"];\
    textField.enabled = NO;\
//
\f1 \'c9\'e8\'d6\'c3\'d7\'ee\'d0\'a1\'d7\'d6\'cc\'e5
\f2  
\f1 \'d4\'da\'d7\'d4\'ca\'ca\'d3\'a6\'d7\'d6\'cc\'e5\'ca\'b1\'c9\'fa\'d0\'a7\'a3\'ac\'d4\'ca\'d0\'ed\'d7\'ee\'d0\'a1\'d7\'d6\'cc\'e5\'a3\'ac\'d4\'da
\f2 adjustsFontSizeToFitWidth = YES
\f1 \'a3\'ac\'b2\'c5\'d3\'d0\'d0\'a7
\f2 \
    textField.adjustsFontSizeToFitWidth = YES;\
    textField.minimumFontSize = 1;\
//
\f1 \'c9\'e8\'d6\'c3\'d5\'bc\'ce\'bb\'b7\'fb
\f2 \
    textField.placeholder = @"
\f1 \'c7\'eb\'ca\'e4\'c8\'eb\'c3\'dc\'c2\'eb
\f2 ";\
\
//
\f1 \'bd\'f8\'c8\'eb\'b5\'b1\'c7\'b0\'ce\'c4\'b1\'be\'bf\'f2
\f2  
\f1 \'b5\'da\'d2\'bb\'cf\'ec\'d3\'a6
\f2 \
    [textField becomeFirstResponder];\
//
\f1 \'d2\'bb\'b8\'f6\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7\'c9\'cf\'a3\'ac\'bf\'c9\'c4\'dc\'d3\'d0\'b6\'e0\'b8\'f6\'b1\'e0\'bc\'ad\'bf\'d8\'bc\'fe\'a3\'ac\'c4\'c4\'b8\'f6\'d5\'fd\'d4\'da\'b1\'e0\'bc\'ad\'a3\'ac\'c4\'c4\'b8\'f6\'b5\'b1\'c7\'b0\'ca\'c7\'b5\'da\'d2\'bb\'cf\'ec\'d3\'a6\'d5\'df\'a3\'ac\'cd\'a8\'b9\'fd\'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'bf\'c9\'d2\'d4\'d6\'b1\'bd\'d3\'ba\'f3\'cc\'a8\'bf\'aa\'c6\'f4\'b5\'da\'d2\'bb\'cf\'ec\'d3\'a6
\f2 \
\

\f1 \'b4\'a5\'c3\'fe\'ce\'c4\'b1\'be\'bf\'f2\'cf\'ec\'d3\'a6
\f2 (Ended)\
-(void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event\{\
//
\f1 \'d5\'d2\'b5\'bd\'b5\'b1\'c7\'b0\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7\'c9\'cf\'c3\'e6\'b5\'c4\'ce\'c4\'b1\'be\'bf\'f2
\f2 \
    UITextField *textField = (id)[self.view viewWithTag:31];    \
//
\f1 \'c9\'e8\'d6\'c3\'bc\'fc\'c5\'cc\'c0\'e0\'d0\'cd
\f2  (
\f1 \'b7\'c5\'d4\'da\'b4\'fa\'c0\'ed\'bd\'ab\'d2\'aa\'bf\'aa\'ca\'bc\'b1\'e0\'bc\'ad\'ca\'b1\'b5\'c4\'b7\'bd\'b7\'a8\'c0\'ef
\f2 )\
    textField.keyboardType = UIKeyboardTypeNumberPad;   \
//
\f1 \'c9\'e8\'d6\'c3\'ce\'c4\'b1\'be\'bf\'f2\'d2\'d4\'c3\'dc\'ce\'c4\'cf\'d4\'ca\'be
\f2  
\f1 \'c4\'ac\'c8\'cf\'ce\'aa
\f2 NO
\f1 \'a3\'ac\'c9\'e8\'d6\'c3
\f2 YES
\f1 \'bf\'b4\'b2\'bb\'b5\'bd\'c3\'dc\'c2\'eb
\f2 \
    textField.secureTextEntry = YES; \
   \
//
\f1 \'c9\'e8\'d6\'c3\'ce\'c4\'b1\'be\'bf\'f2\'c7\'e5\'b3\'fd\'b0\'b4\'c5\'a5\'d1\'f9\'ca\'bd
\f2 \
    /*\
     UITextFieldViewModeNever\
     UITextFieldViewModeWhileEditing\
     UITextFieldViewModeUnlessEditing\
     UITextFieldViewModeAlways\
     */\
    textField.clearButtonMode = UITextFieldViewModeAlways;    \
//
\f1 \'c9\'e8\'d6\'c3\'b1\'e0\'bc\'ad\'ce\'c4\'d7\'d6
\f2  
\f1 \'c3\'bf\'b4\'ce\'b1\'e0\'bc\'ad\'ca\'b1\'a3\'ac\'d4\'ad\'d3\'d0\'ce\'c4\'d7\'d6\'cf\'fb\'ca\'a7
\f2 \
    textField.clearsOnBeginEditing = YES;\
    \
//
\f1 \'b7\'c5\'c6\'fa\'b5\'da\'d2\'bb\'cf\'ec\'d3\'a6\'d5\'df
\f2 \
    [textField resignFirstResponder];\
\}\
-UITextFieldDelegate-\
//
\f1 \'bd\'ab\'d2\'aa\'bf\'aa\'ca\'bc\'b1\'e0\'bc\'ad\'a3\'ac\'b7\'b5\'bb\'d8
\f2 YES
\f1 \'a3\'ac\'d4\'ca\'d0\'ed\'bf\'aa\'ca\'bc\'b1\'e0\'bc\'ad\'a3\'ac\'b7\'b5\'bb\'d8
\f2 NO
\f1 \'a3\'ac\'b2\'bb\'d4\'ca\'d0\'ed\'b1\'e0\'bc\'ad
\f2 \
-(BOOL)textFieldShouldBeginEditing:(UITextField *)textField\{\
    NSLog(@"
\f1 \'bd\'ab\'d2\'aa\'bf\'aa\'ca\'bc\'b1\'e0\'bc\'ad
\f2 ");\
    return YES;\
\}\
//
\f1 \'d0\'c2\'ca\'e4\'c8\'eb\'b5\'c4\'ce\'c4\'d7\'d6\'bd\'ab\'d2\'aa\'c6\'b4\'bd\'d3\'b5\'bd\'cf\'c8\'d3\'d0\'ce\'c4\'d7\'d6\'d6\'ae\'ba\'f3\'a3\'ac\'b7\'b5\'bb\'d8
\f2 YES
\f1 \'a3\'ac\'d4\'ca\'d0\'ed\'c6\'b4\'bd\'d3\'a3\'bb\'b7\'b5\'bb\'d8
\f2 NO
\f1 \'a3\'ac\'b2\'bb\'d4\'ca\'d0\'ed\'c6\'b4\'bd\'d3
\f2 \
-(BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string\{\
    return YES;\
\}\
//
\f1 \'b5\'e3\'bb\'f7\'c7\'e5\'b3\'fd\'b0\'b4\'c5\'a5\'ca\'b1\'a3\'ac\'b5\'f7\'d3\'c3\'b5\'c4\'b7\'bd\'b7\'a8\'a3\'ac\'b7\'b5\'bb\'d8
\f2 YES
\f1 \'a3\'ac\'d4\'ca\'d0\'ed\'c7\'e5\'b3\'fd\'a3\'bb\'b7\'b5\'bb\'d8
\f2 NO
\f1 \'a3\'ac\'b2\'bb\'d4\'ca\'d0\'ed\'c7\'e5\'b3\'fd
\f2 \
-(BOOL)textFieldShouldClear:(UITextField *)textField\{\
    NSLog(@"
\f1 \'c7\'e5\'b3\'fd\'b0\'b4\'c5\'a5\'b1\'bb\'b5\'e3\'bb\'f7
\f2 ");\
    return YES;\
\}\
\

\f1 \'b4\'ab\'d6\'b5
\f2 \

\f1 \'b4\'fa\'c0\'ed\'b4\'ab\'d6\'b5
\f2 \
(FirstVC.h )\
#import "SecondViewController.h"\
//
\f1 \'b4\'fa\'c0\'ed\'b7\'bd
\f2  
\f1 \'d7\'f1\'ca\'d8\'d0\'ad\'d2\'e9
\f2  
\f1 \'ca\'b5\'cf\'d6\'d0\'ad\'d2\'e9\'d6\'d0\'b5\'c4\'b7\'bd\'b7\'a8
\f2 \
@interface FirstViewController : UIViewController <SecondViewControllerDelegate>\
\
(FirstVC.m 
\f1 \'d4\'da
\f2 button
\f1 \'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe\'d6\'d0
\f2 )\
    //
\f1 \'b3\'d6\'d3\'d0\'b4\'fa\'c0\'ed\'b5\'c4\'d6\'b8\'d5\'eb\'d6\'b8\'cf\'f2
\f2  (
\f1 \'bd\'a8\'c1\'a2\'c1\'aa\'cf\'b5
\f2 )\
    secVC.delegate = self;\
\
(FirstVC.m)\
#pragma mark ===
\f1 \'ca\'b5\'cf\'d6
\f2 SecondViewControllerDelegate===\
-(void)sendUserName:(NSString *)userNameString\{\
    UITextField *nameTF = (id)[self.view viewWithTag:12];\
    nameTF.text = userNameString;\
\}\
-(void)sendPassward:(NSString *)passwardString\{\
    UITextField *wardTF = (id)[self.view viewWithTag:31];\
    wardTF.text = passwardString;\
\}\
\
(SecondVC.h)\
//
\f1 \'c9\'f9\'c3\'f7\'d0\'ad\'d2\'e9\'a3\'ac
\f2  
\f1 \'b8\'c3\'d0\'ad\'d2\'e9\'d4\'da\'ce\'af\'cd\'d0\'b7\'bd\'b5\'c4
\f2 ViewController
\f1 \'c0\'ef\'c3\'e6
\f2 \
@protocol SecondViewControllerDelegate <NSObject>\
//
\f1 \'b4\'ab\'b5\'dd\'d3\'c3\'bb\'a7\'c3\'fb\'b7\'bd\'b7\'a8
\f2 \
-(void)sendUserName:(NSString *)userNameString;\
//
\f1 \'b4\'ab\'b5\'dd\'c3\'dc\'c2\'eb\'b7\'bd\'b7\'a8
\f2 \
-(void)sendPassward:(NSString *)passwardString;\
@end\
\
//
\f1 \'c9\'f9\'c3\'f7\'b3\'d6\'d3\'d0\'b4\'fa\'c0\'ed\'b5\'c4
\f2 id
\f1 \'d0\'cd\'d6\'b8\'d5\'eb
\f2 \
@property (nonatomic,weak) id<SecondViewControllerDelegate> delegate;\
\
(SecondVC.m 
\f1 \'d4\'da
\f2 button
\f1 \'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe\'d6\'d0
\f2 )\
    //
\f1 \'c5\'d0\'b6\'cf\'b4\'fa\'c0\'ed\'b5\'c4\'b7\'bd\'b7\'a8
\f2 \
    if (self.delegate && [self.delegate respondsToSelector:@selector(sendUserName:)]) \{\
        //
\f1 \'b4\'fa\'c0\'ed\'b5\'f7\'d3\'c3\'b7\'bd\'b7\'a8
\f2  
\f1 \'b4\'ab\'b5\'dd\'d3\'c3\'bb\'a7\'c3\'fb\'ce\'c4\'b1\'be\'bf\'f2\'b5\'c4\'c4\'da\'c8\'dd
\f2 \
        [self.delegate sendUserName:nameTF.text];\
    \}\
    if (self.delegate && [self.delegate respondsToSelector:@selector(sendPassward:)]) \{\
        //
\f1 \'b4\'fa\'c0\'ed\'b5\'f7\'d3\'c3\'b7\'bd\'b7\'a8
\f2  
\f1 \'b4\'ab\'b5\'dd\'c3\'dc\'c2\'eb\'ce\'c4\'b1\'be\'bf\'f2\'b5\'c4\'c4\'da\'c8\'dd
\f2 \
        [self.delegate sendPassward:wordTF.text];\
    \}\
\
block
\f1 \'b4\'ab\'d6\'b5
\f2 \
(FirstVC.m 
\f1 \'d4\'da
\f2 button
\f1 \'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe\'d6\'d0
\f2 )\
    SecondViewController *secVC = [[SecondViewController alloc] init];\
    secVC.sendUserName = ^(NSString *userNameString)\{\
        //
\f1 \'be\'df\'cc\'e5\'b2\'d9\'d7\'f7
\f2  
\f1 \'d5\'d2\'b5\'bd\'b5\'b1\'c7\'b0\'ca\'d3\'cd\'bc\'c9\'cf\'b5\'c4\'ce\'c4\'b1\'be\'bf\'f2
\f2 \
        UITextField *nameTF = (id)[self.view viewWithTag:12];\
        //
\f1 \'ce\'c4\'b1\'be\'bf\'f2\'cf\'d4\'ca\'be\'b4\'ab\'b5\'dd\'b5\'c4\'b2\'ce\'ca\'fd
\f2 \
        nameTF.text = userNameString;\
    \};\
    secVC.sendPassword = ^(NSString *passwordString)\{\
        UITextField *wordTF = (id)[self.view viewWithTag:31];\
        wordTF.text = passwordString;\
    \};\
\
(SecondVC.h)\
//
\f1 \'c9\'f9\'c3\'f7
\f2 block 
\f1 \'c3\'fb\'d7\'d6
\f2  sendUserName 
\f1 \'ba\'cd
\f2  sendPassword 
\f1 \'b7\'d6\'b1\'f0\'b4\'ab\'b5\'dd\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'b7\'b5\'bb\'d8\'d6\'b5\'ce\'aa\'bf\'d5
\f2 \
@property (nonatomic,strong) void (^sendUserName)(NSString *userName);\
@property (nonatomic,strong) void (^sendPassword)(NSString *password);\
\
(SecondVC.m 
\f1 \'d4\'da
\f2 button
\f1 \'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe\'d6\'d0
\f2 )\
    UITextField *nameTF = (id)[self.view viewWithTag:12];\
    UITextField *wordTF = (id)[self.view viewWithTag:31];\
//
\f1 \'c5\'d0\'b6\'cf
\f2 block
\f1 \'ca\'c7\'b7\'f1\'ce\'aa\'d5\'e6
\f2 \
    if (self.sendUserName) \{\
	   //block
\f1 \'b4\'ab\'b5\'dd\'b2\'ce\'ca\'fd
\f2 \
        self.sendUserName(nameTF.text);\
    \}\
    if (self.sendPassword) \{\
        self.sendPassword(wordTF.text);\
    \}\
\

\f1 \'b5\'a5\'c0\'fd\'b4\'ab\'d6\'b5
\f2 \
(NewGroup
\f1 \'b5\'a5\'c0\'fd
\f2  Manger.h)\
@property (nonatomic,strong) NSString *userName;\
@property (nonatomic,strong) NSString *passWord;\
+(Manger *)sharedManger;\
\
(Manger.m)\
//
\f1 \'b5\'da\'d2\'bb\'d6\'d6\'b7\'bd\'ca\'bd
\f2 \
+(Manger *)sharedManger\{\
    static Manger *manger = nil;\
    if (manger == nil) \{\
        manger = [[Manger alloc] init];\
    \}\
    return manger;\
\}\
//
\f1 \'b5\'da\'b6\'fe\'d6\'d6\'b7\'bd\'ca\'bd
\f2 \
+(Manger *)sharedManger\{\
    static Manger *manger = nil;\
    @synchronized(self)\{\
        if (manger == nil) \{\
            manger = [[Manger alloc] init];\
        \}\
    \}\
    return manger;\
\}\
//
\f1 \'b5\'da\'c8\'fd\'d6\'d6\'b7\'bd\'ca\'bd
\f2 \
/*\
 
\f1 \'cf\'df\'b3\'cc\'b0\'b2\'c8\'ab
\f2 \
 
\f1 \'c2\'fa\'d7\'e3\'be\'b2\'cc\'ac\'b7\'d6\'ce\'f6\'c6\'f7\'b5\'c4\'d2\'aa\'c7\'f3
\f2 \
 
\f1 \'bc\'e6\'c8\'dd\'c1\'cb
\f2 ARC\
 */\
+(Manger *)sharedManger\{\
    static Manger *manger = nil;\
    static dispatch_once_t onceToken;\
    dispatch_once(&onceToken, ^\{\
        if (manger == nil) \{\
            manger = [[Manger alloc] init];\
        \}\
    \});\
    return manger;\
\}\
\
(FirstVC.m)\
#pragma mark ===
\f1 \'b5\'a5\'c0\'fd
\f2 ===\
-(void)viewWillAppear:(BOOL)animated\{\
    [super viewWillAppear:animated];\
    //
\f1 \'bb\'f1\'c8\'a1\'b5\'a5\'c0\'fd
\f2 \
    Manger *manger = [Manger sharedManger];\
    NSLog(@"First:%p", manger);\
    \
    UITextField *nameTF = (id)[self.view viewWithTag:12];\
    UITextField *wordTF = (id)[self.view viewWithTag:31];\
    \
    nameTF.text = manger.userName;\
    wordTF.text = manger.passWord;\
\}\
\
(SecondVC.m 
\f1 \'d4\'da
\f2 button
\f1 \'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe\'d6\'d0
\f2 )\
    Manger *manger = [Manger sharedManger];\
    NSLog(@"Second:%p", manger);\
   \
    manger.userName = nameTF.text;\
    manger.passWord = wordTF.text;\
\

\f1 \'cd\'a8\'d6\'aa\'b4\'ab\'d6\'b5
\f2 \
(FirstVC.m viewDidLoad
\f1 \'b7\'bd\'b7\'a8\'d6\'d0
\f2 )\
    NSNotificationCenter *nc = [NSNotificationCenter defaultCenter];\
    //
\f1 \'d7\'a2\'b2\'e1\'b9\'db\'b2\'ec\'d5\'df
\f2  
\f1 \'cd\'a8\'d6\'aa\'b5\'c4\'c3\'fb\'d7\'d6\'d2\'bb\'d6\'c2
\f2 \
    [nc addObserver:self selector:@selector(getUserName:) name:@"UserName" object:nil];\
    [nc addObserver:self selector:@selector(getPassWord:) name:@"PassWord" object:nil];\
\
(FirstVC.m)\
-(void)getUserName:(NSNotification *)not\{\
    UITextField *nameTF = (id)[self.view viewWithTag:12];\
    nameTF.text = (id)not.object;\
\}\
-(void)getPassWord:(NSNotification *)not\{\
    UITextField *wordTF = (id)[self.view viewWithTag:31];\
    wordTF.text = (id)not.object;\
\}\
\
(SecondVC.m 
\f1 \'d4\'da
\f2 button
\f1 \'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe\'d6\'d0
\f2 )\
    //
\f1 \'bb\'f1\'c8\'a1\'cd\'a8\'d6\'aa\'d6\'d0\'d0\'c4
\f2 \
    NSNotificationCenter *nc = [NSNotificationCenter defaultCenter];\
    \
    //
\f1 \'b4\'b4\'bd\'a8\'cd\'a8\'d6\'aa
\f2  
\f1 \'cd\'a8\'d6\'aa\'c3\'fb\'d7\'d6
\f2 UserName\
    NSNotification *userNamenot = [[NSNotification alloc] initWithName:@"UserName" object:nameTF.text userInfo:nil];\
    NSNotification *passWordnot = [[NSNotification alloc] initWithName:@"PassWord" object:wordTF.text userInfo:nil];\
    \
    //
\f1 \'b7\'c5\'d4\'da\'cd\'a8\'d6\'aa\'d6\'d0\'d0\'c4
\f2  
\f1 \'b7\'a2\'cb\'cd\'b3\'f6\'c8\'a5
\f2 \
    [nc postNotification:userNamenot];\
    [nc postNotification:passWordnot];\
\

\f1 \'c9\'b3\'ba\'d0\'b4\'ab\'d6\'b5
\f2 (
\f1 \'b1\'a3\'b4\'e6\'c7\'e1\'c1\'bf\'bc\'b6\'ca\'fd\'be\'dd\'b5\'c4\'b7\'bd\'ca\'bd
\f2 )\
(FirstVC.m)\
-(void)viewWillAppear:(BOOL)animated\{\
    [super viewWillAppear:animated];\
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];\
    \
    UITextField *nameTF = (id)[self.view viewWithTag:12];\
    UITextField *wordTF = (id)[self.view viewWithTag:31];\
    \
    //
\f1 \'b6\'c1\'c8\'a1\'ca\'fd\'be\'dd
\f2 \
    nameTF.text = [defaults objectForKey:@"UserName"];\
    wordTF.text = [defaults objectForKey:@"PassWord"];\
\}\
\
(SecondVC.m 
\f1 \'d4\'da
\f2 button
\f1 \'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe\'d6\'d0
\f2 )\
    //
\f1 \'b1\'a3\'b4\'e6\'c7\'e1\'c1\'bf\'bc\'b6\'b5\'c4\'ca\'fd\'be\'dd
\f2  
\f1 \'b1\'c8\'c8\'e7\'d3\'c3\'bb\'a7\'c3\'fb
\f2  
\f1 \'c3\'dc\'c2\'eb
\f2  BOOL
\f1 \'d6\'b5\'b5\'c8
\f2 \
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];\
    [defaults setObject:nameTF.text forKey:@"UserName"];\
    [defaults setObject:wordTF.text forKey:@"PassWord"];\
    //
\f1 \'b1\'a3\'b4\'e6
\f2  (
\f1 \'c8\'e7\'b9\'fb\'b2\'bb\'bc\'d3\'a3\'ac\'d3\'d0\'ca\'b1\'ba\'f2\'d2\'b2\'bf\'c9\'d2\'d4\'b1\'a3\'b4\'e6\'b3\'c9\'b9\'a6\'a3\'ac\'b5\'ab\'ca\'c7\'d3\'d0\'ca\'b1\'ba\'f2\'b1\'a3\'b4\'e6\'b2\'bb\'b3\'c9\'b9\'a6
\f2 )\
    [defaults synchronize];\
\

\f1 \'b5\'bc\'ba\'bd\'c0\'b8
\f2 \

\f1 \'b5\'bc\'ba\'bd\'c0\'b8
\f2 Item\
//
\f1 \'bb\'ac\'b6\'af\'cc\'f5
\f2  
\f1 \'bf\'ed\'b6\'c8\'c9\'e8\'d6\'c3\'b6\'e0\'c9\'d9\'ce\'de\'d0\'a7
\f2   
\f1 \'cc\'ed\'bc\'d3\'d7\'f3\'d3\'d2\'b0\'b4\'c5\'a5\'d7\'d4\'b6\'af\'cb\'f5\'bc\'f5
\f2 \
    self.navigationItem.titleView = [[UISlider alloc] initWithFrame:CGRectMake(100, 100, 320, 44)];\
//
\f1 \'cc\'ed\'bc\'d3\'d7\'f3\'d3\'d2
\f2 BarButtonItem  
\f1 \'d7\'f3\'d3\'d2\'b2\'bb\'c4\'dc\'ca\'b9\'d3\'c3\'cd\'ac\'d2\'bb\'b8\'f6
\f2 item\
    UIBarButtonItem *rightItem = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemBookmarks target:self action:@selector(itemClick:)];\
//
\f1 \'b5\'bc\'ba\'bd\'c0\'b8\'cc\'ed\'bc\'d3\'d3\'d2\'b2\'e0\'b0\'b4\'c5\'a5
\f2 \
    self.navigationItem.rightBarButtonItem = rightItem;\
\
//
\f1 \'cd\'a8\'b9\'fd\'ce\'c4\'d7\'d6\'b4\'b4\'bd\'a8
\f2 UIBarButtonItem\
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@"
\f1 \'c0\'b2\'c0\'b2
\f2 " style:UIBarButtonItemStylePlain target:self action:nil];\
\
//
\f1 \'cd\'a8\'b9\'fd\'cd\'bc\'c6\'ac\'b4\'b4\'bd\'a8
\f2 UIBarButtonItem\
//
\f1 \'c9\'e8\'d6\'c3\'cd\'bc\'c6\'ac\'d3\'c0\'d4\'b6\'cf\'d4\'ca\'be
\f2  
\f1 \'b6\'f8\'b7\'c7\'c2\'d6\'c0\'aa
\f2  
\f1 \'b2\'bb\'bc\'d3\'d5\'e2\'be\'e4\'b4\'fa\'c2\'eb
\f2  
\f1 \'d6\'bb\'bb\'e1\'cf\'d4\'ca\'be\'c2\'d6\'c0\'aa
\f2 \
    UIImage *limage = [[UIImage imageNamed:@"player_down_2.png" ] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];\
\
//
\f1 \'d7\'f3\'b2\'e0\'b0\'b4\'c5\'a5\'b4\'b4\'bd\'a8\'a1\'a2\'cc\'ed\'bc\'d3
\f2 \
    UIBarButtonItem *leftItem = [[UIBarButtonItem alloc] initWithImage:limage style:UIBarButtonItemStylePlain target:nil action:nil];\
    self.navigationItem.leftBarButtonItem = leftItem;\
\
//
\f1 \'d2\'b2\'bf\'c9\'d2\'d4\'cc\'ed\'bc\'d3\'d2\'bb\'d7\'e9
\f2 Item\
    UIBarButtonItem *item3 = [[UIBarButtonItem alloc]initWithTitle:@"
\f1 \'cf\'c8
\f2 " style:UIBarButtonItemStylePlain target:nil action:nil];\
\
    UIBarButtonItem *item4 = [[UIBarButtonItem alloc]initWithTitle:@"
\f1 \'d6\'d0
\f2 " style:UIBarButtonItemStylePlain target:nil action:nil];\
\
    UIBarButtonItem *item5 = [[UIBarButtonItem alloc]initWithTitle:@"
\f1 \'ba\'f3
\f2 " style:UIBarButtonItemStylePlain target:nil action:nil];\
\
    NSArray *array2 = @[item4,item3,item5];\
    self.navigationItem.rightBarButtonItems = array2;\
\
===
\f1 \'cf\'c2\'b8\'f6\'bd\'e7\'c3\'e6\'b7\'b5\'bb\'d8\'b0\'b4\'c5\'a5
\f2 ===\
    self.navigationItem.backBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@"Back----" style:UIBarButtonItemStylePlain target:nil action:@selector(back:)];\
\
(
\f1 \'d4\'da
\f2 Item
\f1 \'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe\'d6\'d0
\f2 )\
//push
\f1 \'d1\'b9\'d5\'bb
\f2 \
//
\f1 \'b7\'c7
\f2 ARC
\f1 \'c7\'e9\'bf\'f6\'cf\'c2
\f2   
\f1 \'d6\'bb\'d2\'aa\'cd\'c6\'b3\'f6\'ca\'d3\'cd\'bc
\f2  
\f1 \'bb\'e1\'b1\'a3\'c1\'f4
\f2  
\f1 \'b4\'cb\'ca\'b1\'bf\'c9\'d2\'d4
\f2 release\
    [self.navigationController pushViewController:secVC animated:YES];\
    [self.navigationController popViewControllerAnimated:YES];\
\

\f1 \'b9\'a4\'be\'df\'c0\'b8
\f2 toolbar\
-(void)toolBarSetting\{\
    //
\f1 \'b0\'eb\'cd\'b8\'c3\'f7
\f2 \
    self.navigationController.toolbar.translucent = YES;\
    //
\f1 \'b8\'f1\'ca\'bd
\f2 \
    self.navigationController.toolbar.barStyle = UIBarStyleDefault;\
    //
\f1 \'ef\'ce\'bf\'d5\'b4\'a6\'d1\'d5\'c9\'ab\'a3\'bf\'a3\'bf\'a3\'bf
\f2 \
    self.navigationController.toolbar.barTintColor = [UIColor yellowColor];\
    //
\f1 \'b1\'ea\'cc\'e2\'d1\'d5\'c9\'ab
\f2 \
    self.navigationController.toolbar.tintColor = [UIColor redColor];\
    //
\f1 \'c9\'e8\'d6\'c3\'b1\'b3\'be\'b0\'cd\'bc\'c6\'ac
\f2 \
    [self.navigationController.toolbar setBackgroundImage:[UIImage imageNamed:@"rr_homepage_bg_notify.png"] forToolbarPosition:UIBarPositionAny barMetrics:UIBarMetricsDefault];\
    \
    UIBarButtonItem *item1 = [[UIBarButtonItem alloc]initWithTitle:@"1" style:UIBarButtonItemStylePlain target:self action:@selector(item1Click)];\
     \
    UIBarButtonItem *item2 = [[UIBarButtonItem alloc]initWithTitle:@"2" style:UIBarButtonItemStylePlain target:self action:@selector(item2Click)];\
    \
    UIBarButtonItem *item3 = [[UIBarButtonItem alloc]initWithTitle:@"3" style:UIBarButtonItemStylePlain target:nil action:nil];\
    /*\
     UIBarButtonSystemItemFlexibleSpace,  
\f1 \'b5\'c8\'bf\'ed
\f2 \
     UIBarButtonSystemItemFixedSpace,     
\f1 \'d7\'d4\'b6\'a8\'d6\'c6\'bf\'ed\'b6\'c8
\f2 \
     */\
    UIBarButtonItem *space = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:nil action:nil];\
//
\f1 \'d7\'d4\'b6\'a8\'d6\'c6\'d5\'bc\'ce\'bb\'bf\'ed\'b6\'c8
\f2 \
    space.width = self.view.frame.size.width/3;\
//
\f1 \'bd\'ab
\f2 UIBarButtonItem
\f1 \'b6\'d4\'cf\'f3\'cc\'ed\'bc\'d3\'b5\'bd\'cf\'c2\'c3\'e6\'ca\'fd\'d7\'e9\'d6\'d0
\f2 \
    self.toolbarItems = @[item1,space,item2,space,item3];\
\}\
\
//
\f1 \'c9\'e8\'d6\'c3\'cf\'d4\'ca\'be\'bb\'f2\'d5\'df\'ca\'d5\'c6\'f0\'b5\'bc\'ba\'bd\'cc\'f5
\f2  
\f1 \'d2\'fe\'b2\'d8\'b5\'bc\'ba\'bd\'cc\'f5
\f2 \
    [self.navigationController setNavigationBarHidden:YES animated:YES];\
    [self.navigationController setToolbarHidden:NO animated:YES];\
\
//
\f1 \'b7\'b5\'bb\'d8\'cd\'ac\'d2\'bb\'b8\'f6\'b5\'bc\'ba\'bd\'b5\'c4\'b8\'f9\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7
\f2 \
    [self.navigationController popToRootViewControllerAnimated:YES];\
 \
//
\f1 \'b7\'b5\'bb\'d8\'d5\'bb\'d6\'d0\'c8\'ce\'d2\'e2\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7
\f2 \
    [self.navigationController popToViewController:array[1] animated:YES];\
                                                   
\f4 \uc0\u11015 \u65039 
\f2 \

\f1 \'ba\'ea\'b6\'a8\'d2\'e5
\f2                                                                            
\f4 \uc0\u11015 \u65039 
\f2 \
#define array self.navigationController.viewControllers\
#define 
\f1 \'c3\'fb\'d7\'d6
\f2  
\f1 \'c3\'fb\'d7\'d6\'b4\'fa\'b1\'ed\'b5\'c4\'b6\'d4\'cf\'f3
\f2 \
\

\f1 \'b1\'ea\'c7\'a9\'c0\'b8\'bf\'d8\'d6\'c6\'c6\'f7
\f2 \
(
\f1 \'b4\'b4\'bd\'a8\'b1\'ea\'c7\'a9\'c0\'b8\'bf\'d8\'d6\'c6\'c6\'f7
\f2 )\
//
\f1 \'b4\'b4\'bd\'a8
\f2 UITabBarController 
\f1 \'b1\'ea\'c7\'a9\'c0\'b8\'bf\'d8\'d6\'c6\'c6\'f7
\f2 \
    UITabBarController *tab = [[UITabBarController alloc] init];\
//
\f1 \'c8\'a1\'b3\'f6\'c9\'cf\'d2\'bb\'b4\'ce\'b5\'c4\'cf\'d4\'ca\'be\'cb\'b3\'d0\'f2
\f2 \
    NSArray *orderArray = [[NSUserDefaults standardUserDefaults] objectForKey:@"order"];\
//
\f1 \'d3\'c3\'c0\'b4\'b9\'dc\'c0\'ed\'cf\'d4\'ca\'be\'b5\'c4\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7\'ca\'fd\'d7\'e9
\f2 \
    NSMutableArray *viewControllersArray = [[NSMutableArray alloc] init];\
    \
    //
\f1 \'c8\'e7\'b9\'fb\'b1\'a3\'b4\'e6\'cb\'b3\'d0\'f2\'b5\'c4\'ca\'fd\'d7\'e9\'d3\'d0\'d6\'b5\'a3\'ac\'b0\'b4\'d5\'d5\'c9\'cf\'d2\'bb\'b4\'ce\'b1\'a3\'b4\'e6\'b5\'c4\'cb\'b3\'d0\'f2\'a3\'ac\'b4\'b4\'bd\'a8
\f2 ViewController\
    if (orderArray.count > 0) \{\
        \
        //orderArray
\f1 \'d6\'d0\'b4\'e6\'d7\'c5
\f2 ViewContrller
\f1 \'b6\'d4\'d3\'a6\'b5\'c4\'c0\'e0\'c3\'fb
\f2 \
        for (NSString *className in orderArray) \{\
            \
            //
\f1 \'cd\'a8\'b9\'fd\'d2\'bb\'b8\'f6\'c0\'e0\'c3\'fb\'a3\'ac\'b5\'c3\'b5\'bd\'d2\'bb\'b8\'f6\'c0\'e0
\f2 \
            Class aClass = NSClassFromString(className);\
            \
            //
\f1 \'cd\'a8\'b9\'fd\'c0\'e0\'c8\'a5\'b4\'b4\'bd\'a8
\f2 ViewController\
            //
\f1 \'bc\'d9\'c8\'e7
\f2 className
\f1 \'ce\'aa
\f2 ViewController1,
\f1 \'cf\'c2\'c3\'e6\'d5\'e2\'d0\'d0\'b4\'fa\'c2\'eb\'cf\'e0\'b5\'b1\'d3\'da
\f2 UIViewController *vc = [[[ViewController alloc] init]\
            UIViewController *vc = [[aClass alloc] init];\
            \
            //
\f1 \'bb\'f1\'c8\'a1
\f2 className
\f1 \'d7\'ee\'ba\'f3\'b5\'c4\'d2\'bb\'ce\'bb\'ca\'fd\'d7\'d6
\f2 eg:ViewController1,
\f1 \'bb\'f1\'c8\'a1
\f2 1\
            NSInteger num = [[className substringFromIndex:className.length - 1]integerValue];\
            vc.title = [NSString stringWithFormat:@"
\f1 \'b5\'da
\f2 %d
\f1 \'d2\'b3
\f2 ", num];\
            \
            //
\f1 \'b0\'b4\'cb\'b3\'d0\'f2\'b4\'b4\'bd\'a8\'b2\'a2\'cc\'ed\'bc\'d3\'b5\'bd
\f2 viewControllers
\f1 \'ca\'fd\'d7\'e9\'d6\'d0\'a3\'ac\'b4\'fd\'cf\'d4\'ca\'be
\f2 \
            [viewControllersArray addObject:vc];\
        \}\
    \}\
    else\{\
        //
\f1 \'b4\'b4\'bd\'a8\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7
\f2 \
        ViewController1 *vc1 = [[ViewController1 alloc] init];\
        ViewController2 *vc2 = [[ViewController2 alloc] init];\
        ViewController3 *vc3 = [[ViewController3 alloc] init];\
        \
        //
\f1 \'c9\'e8\'d6\'c3
\f2 VC1
\f1 \'b5\'c4\'b1\'ea\'cc\'e2
\f2 \
        vc1.title = @"1";\
        vc2.title = @"2";\
        vc3.title = @"3";\
		\
	  1
\f1 \'a1\'a2
\f2 \
	  //
\f1 \'b4\'b4\'bd\'a8\'ca\'fd\'d7\'e9
\f2  
\f1 \'b0\'d1
\f2 VC
\f1 \'b7\'c5\'d4\'da\'ca\'fd\'d7\'e9\'d6\'d0
\f2  
\f1 \'b1\'ea\'c7\'a9\'c0\'b8\'bf\'d8\'d6\'c6\'c6\'f7\'cd\'a8\'b9\'fd\'ca\'fd\'d7\'e9\'b9\'dc\'c0\'ed\'c6\'bd\'bc\'b6\'ca\'d3\'cd\'bc
\f2 \
        NSArray *arrayVCS = @[vc1, vc2, vc3];\
        //
\f1 \'b0\'d1\'b1\'ea\'c7\'a9\'c0\'b8\'bf\'d8\'d6\'c6\'c6\'f7\'d7\'f7\'ce\'aa
\f2 window
\f1 \'b5\'c4\'b8\'f9\'ca\'d3\'cd\'bc
\f2 \
        tab.viewControllers = arrayVCS;\
\
        2
\f1 \'a1\'a2
\f2 \
        tab.viewControllers = @[vc1, vc2, vc3];\
\}\
    //
\f1 \'c9\'e8\'d6\'c3
\f2 UITabBarController
\f1 \'b9\'dc\'c0\'ed\'b5\'c4\'c6\'bd\'bc\'b6\'ca\'d3\'cd\'bc\'ca\'fd\'d7\'e9
\f2 \
    tab.viewControllers = viewControllersArray;\
    \
    //
\f1 \'c4\'ac\'c8\'cf\'c7\'e9\'bf\'f6\'cf\'c2\'a3\'ac
\f2 UITabBarController
\f1 \'cf\'d4\'ca\'be\'b5\'c4\'ca\'c7\'ca\'fd\'d7\'e9\'d6\'d0\'b5\'c3\'b5\'da\'d2\'bb\'b8\'f6
\f2 ViewController\
    //
\f1 \'c8\'a1\'b3\'f6\'c9\'b3\'ba\'d0\'d6\'d0\'b1\'a3\'b4\'e6\'b5\'c4\'c9\'cf\'d2\'bb\'b4\'ce\'d1\'a1\'d6\'d0\'b5\'c4\'ca\'d3\'cd\'bc\'b5\'c4\'cf\'c2\'b1\'ea\'d6\'b5
\f2 ,
\f1 \'b4\'e6\'c8\'a1\'b5\'c4
\f2 key
\f1 \'d2\'bb\'b6\'a8\'d2\'aa\'d2\'bb\'d6\'c2
\f2 \
    NSInteger index = [[NSUserDefaults standardUserDefaults] integerForKey:@"index"];\
    \
    //
\f1 \'c9\'e8\'d6\'c3
\f2 UITabBarController
\f1 \'b5\'b1\'c7\'b0\'d1\'a1\'d6\'d0\'b5\'c4\'ca\'d3\'cd\'bc
\f2 \
    tab.selectedIndex = index;\
    \
    //
\f1 \'bd\'ab
\f2 tab
\f1 \'c9\'e8\'ce\'aa
\f2 window
\f1 \'b5\'c4\'b8\'f9\'ca\'d3\'cd\'bc
\f2 \
    self.window.rootViewController = tab;\
\}\
\
(
\f1 \'b6\'a8\'d6\'c6
\f2 tabBar)\
    //
\f1 \'d5\'d2\'b5\'bd
\f2 UITabBarController\
    UITabBarController *tab = (id)self.window.rootViewController;\
    //
\f1 \'b4\'b4\'bd\'a8
\f2 tab
\f1 \'b6\'d4\'cf\'f3
\f2 \
    UITabBar *tabBar = tab.tabBar;\
    //
\f1 \'b8\'f1\'ca\'bd
\f2 \
    tabBar.barStyle = UIBarStyleBlack;\
    //
\f1 \'c9\'e8\'d6\'c3\'cd\'b8\'c3\'f7
\f2 \
    tabBar.translucent = NO;\
    //
\f1 \'d1\'a1\'d6\'d0\'ca\'b1\'b5\'c4\'d1\'d5\'c9\'ab
\f2 \
    tabBar.barTintColor = [UIColor cyanColor];\
    tabBar.tintColor = [UIColor redColor];\
    //
\f1 \'c9\'e8\'d6\'c3\'b1\'b3\'be\'b0\'cd\'bc\'c6\'ac
\f2 \
    [tabBar setBackgroundImage:[UIImage imageNamed:@"tabbg"]];\
\
    //
\f1 \'d2\'fe\'b2\'d8\'b1\'ea\'c7\'a9\'c0\'b8
\f2 (
\f1 \'cd\'ac\'ca\'b1\'b1\'ea\'c7\'a9\'c0\'b8\'c9\'e8\'d6\'c3\'b3\'c9\'cd\'b8\'c3\'f7
\f2 )\
    tabBar.hidden = YES;\
    tabBar.translucent = YES;\
\
    //
\f1 \'d5\'d2\'b5\'bd
\f2 UITabBarController\
    UITabBarController *tab = (id)self.window.rootViewController;\
    \
    //
\f1 \'c8\'a1\'b5\'bd\'c4\'b3\'d2\'bb\'b8\'f6\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7
\f2 \
    ViewController1 *vc1 = [viewControllersArray objectAtIndex:0];\
    //
\f1 \'bb\'f1\'c8\'a1
\f2 tab
\f1 \'cb\'f9\'b9\'dc\'c0\'ed\'b5\'c4\'cb\'f9\'d3\'d0\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7
\f2 \
    NSArray *viewControllersArray = tab.viewControllers;\
    //
\f1 \'b4\'b4\'bd\'a8\'cf\'b5\'cd\'b3\'d1\'f9\'ca\'bd\'b5\'c4
\f2 UITabBarItem\
    UITabBarItem *item1 = [[UITabBarItem alloc] initWithTabBarSystemItem:UITabBarSystemItemHistory tag:0];\
    vc1.tabBarItem = item1;\
\
    ViewController2 *vc2 = [viewControllersArray objectAtIndex:1];\
          //
\f1 \'b4\'b4\'bd\'a8\'d7\'d4\'b6\'a8\'d2\'e5\'d1\'f9\'ca\'bd\'b5\'c4
\f2 UITabBarItem\
    UITabBarItem *item2 = [[UITabBarItem alloc] initWithTitle:@"
\f1 \'b5\'da\'b6\'fe\'d2\'b3
\f2 " image:[UIImage imageNamed:@"tab_0"] tag:1];\
    vc2.tabBarItem = item2;\
    \
    //
\f1 \'c9\'e8\'d6\'c3\'bd\'c7\'b1\'ea\'d6\'b5
\f2  
\f1 \'ca\'fd\'d7\'d6
\f2  
\f1 \'ce\'c4\'d7\'d6
\f2  
\f1 \'bd\'d4\'bf\'c9\'d2\'d4
\f2 \
    vc2.tabBarItem.badgeValue = @"12";\
\
    //
\f1 \'b1\'a3\'b4\'e6\'b5\'bd\'c9\'b3\'ba\'d0\'d6\'d0
\f2 \
    tab.selectedIndex = [[[NSUserDefaults standardUserDefaults] objectForKey:@"index"] intValue];\
\
==
\f1 \'b1\'ea\'c7\'a9\'bf\'d8\'d6\'c6\'c6\'f7\'b4\'fa\'c0\'ed\'b7\'bd\'b7\'a8
\f2 UITabBarControllerDelegate==\
//
\f1 \'bc\'b4\'bd\'ab\'d1\'a1\'d6\'d0\'c4\'b3\'d2\'bb\'b8\'f6\'ca\'d3\'cd\'bc\'b5\'c4\'ca\'b1\'ba\'f2\'b5\'f7\'d3\'c3\'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8
\f2   YES
\f1 \'d4\'ca\'d0\'ed\'d1\'a1\'d6\'d0\'a3\'ac
\f2 NO
\f1 \'b2\'bb\'d4\'ca\'d0\'ed\'d1\'a1\'d6\'d0
\f2 \
- (BOOL)tabBarController:(UITabBarController *)tabBarController shouldSelectViewController:(UIViewController *)viewController\{\
    NSString *str = [NSString stringWithFormat:@"%@", NSStringFromClass([viewController class])];\
    NSLog(@"shouldSelect %@", str);\
    if ([viewController.title isEqualToString:@"2"]) \{\
        return NO;\
    \}\
    if ([[viewController class] isSubclassOfClass:[ViewController3 class]]) \{\
        return NO;\
    \}\
    return YES;\
\}\
//
\f1 \'b1\'a3\'b4\'e6\'bd\'e1\'ca\'f8\'ca\'b1\'cb\'f9\'d4\'da\'b5\'c4\'bd\'e7\'c3\'e6\'cf\'c2\'b1\'ea
\f2 \
- (void)tabBarController:(UITabBarController *)tabBarController didSelectViewController:(UIViewController *)viewController\{\
    NSArray *arrayVCS = tabBarController.viewControllers;\
    NSInteger index = [arrayVCS indexOfObject:viewController];\
    \
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];\
    [defaults setInteger:index forKey:@"index"];\
    [defaults synchronize];\
    NSLog(@"didSelect");\
\}\
//
\f1 \'d2\'d1\'be\'ad\'b1\'e0\'bc\'ad\'bd\'e1\'ca\'f8\'ca\'b1\'b5\'f7\'d3\'c3\'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'a3\'ac
\f2 changed
\f1 \'b5\'c4\'d6\'b5\'d3\'eb\'c9\'cf\'d2\'bb\'b7\'bd\'b7\'a8\'ca\'c7\'d2\'bb\'d6\'c2\'b5\'c4
\f2 \
- (void)tabBarController:(UITabBarController *)tabBarController didEndCustomizingViewControllers:(NSArray *)viewControllers changed:(BOOL)changed\{\
    NSLog(@"didEndCustomizing %@",viewControllers);\
    if (changed) \{\
        NSMutableArray *orderArray = [[NSMutableArray alloc] init];\
        \
        for (UIViewController *vc in viewControllers) \{\
            NSLog(@"%@", vc);\
            \
            NSString *vcName = [NSString stringWithUTF8String:object_getClassName(vc)];\
            NSLog(@"vcName = %@", vcName);\
            [orderArray addObject:vcName];\
        \}\
        NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];\
        [defaults setObject:orderArray forKey:@"order"];\
        [defaults synchronize];\
    \}\
\}\
\
Navigation+Tab\
    //
\f1 \'b4\'b4\'bd\'a8
\f2 UITabBarController 
\f1 \'b1\'ea\'c7\'a9\'c0\'b8\'bf\'d8\'d6\'c6\'c6\'f7
\f2 \
    UITabBarController *tab = [[UITabBarController alloc] init];\
    \
    //
\f1 \'b4\'b4\'bd\'a8\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7\'b6\'d4\'cf\'f3
\f2 \
    ViewController1 *vc1 = [[ViewController1 alloc] init];\
    ViewController2 *vc2 = [[ViewController2 alloc] init];\
    ViewController3 *vc3 = [[ViewController3 alloc] init];\
    ViewController4 *vc4 = [[ViewController4 alloc] init];\
    \
    //
\f1 \'bd\'ab\'b5\'bc\'ba\'bd\'c0\'b8\'b5\'c4\'b8\'f9\'ca\'d3\'cd\'bc\'c9\'e8\'ce\'aa\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7
\f2 \
    UINavigationController *vc11 = [[UINavigationController alloc] initWithRootViewController:vc1];\
    UINavigationController *vc22 = [[UINavigationController alloc] initWithRootViewController:vc2];\
    UINavigationController *vc33 = [[UINavigationController alloc] initWithRootViewController:vc3];\
    UINavigationController *vc44 = [[UINavigationController alloc] initWithRootViewController:vc4];\
    \
    //
\f1 \'bd\'ab\'b1\'ea\'c7\'a9\'c0\'b8\'bf\'d8\'d6\'c6\'c6\'f7\'b5\'c4\'b8\'f9\'ca\'d3\'cd\'bc\'c9\'e8\'ce\'aa\'b5\'bc\'ba\'bd\'c0\'b8
\f2 \
    tab.viewControllers = @[vc11, vc22, vc33, vc44];\
    \
    //
\f1 \'bd\'ab\'cf\'b5\'cd\'b3\'b5\'c4\'b8\'f9\'ca\'d3\'cd\'bc\'c9\'e8\'ce\'aa\'b1\'ea\'c7\'a9\'c0\'b8\'bf\'d8\'d6\'c6\'c6\'f7
\f2 \
    self.window.rootViewController = tab;\
\

\f1 \'c6\'e4\'cb\'fb\'bf\'d8\'bc\'fe\'a3\'ba
\f2 \

\f1 \'bd\'f8\'b6\'c8\'cc\'f5
\f2 (UIProgressView)\
    //
\f1 \'b8\'df
\f2  
\f1 \'c9\'e8\'d6\'c3\'ce\'de\'d3\'c3
\f2 \
    UIProgressView *proView = [[UIProgressView alloc] initWithProgressViewStyle:UIProgressViewStyleBar];\
    //
\f1 \'bd\'f8\'b6\'c8\'d1\'d5\'c9\'ab
\f2 \
    proView.progressTintColor = [UIColor yellowColor];\
    //
\f1 \'c9\'e8\'d6\'c3\'bd\'f8\'b6\'c8
\f2 0-1\
    proView.progress = 0;\
    proView.tag = 3;\
    //
\f1 \'bb\'ac\'b5\'bd\'d1\'d5\'c9\'ab
\f2 \
    proView.trackTintColor = [UIColor orangeColor];\
    //
\f1 \'c9\'e8\'d6\'c3\'cd\'bc\'c6\'ac
\f2 \
    UIImage * image1 = [[UIImage imageNamed:@"4.png"]stretchableImageWithLeftCapWidth:18 topCapHeight:0];\
    UIImage * image2 = [[UIImage imageNamed:@"2.png"]stretchableImageWithLeftCapWidth:2 topCapHeight:0];\
    //
\f1 \'bb\'ac\'b5\'bd\'cd\'bc\'c6\'ac
\f2 \
    proView.trackImage = image1;\
    //
\f1 \'bd\'f8\'b6\'c8\'cd\'bc\'c6\'ac
\f2 \
    proView.progressImage = image2;\
\
===
\f1 \'bd\'f8\'b6\'c8\'cc\'f5\'b6\'a8\'ca\'b1\'c6\'f7
\f2 ===\
-(void)proViewRun:(NSTimer *)tm\{\
    UIProgressView *proView = tm.userInfo;\
    if (proView.progress < 1) \{\
        proView.progress += 0.05;\
    \}else\{\
        [_timer invalidate];\
        _timer = nil;\
    \}\
\}\

\f1 \'be\'d5\'bb\'a8
\f2 (UIActivityIndicatorView)\
    UIActivityIndicatorView *ac = [[UIActivityIndicatorView alloc] initWithFrame:CGRectMake(40, 250, 30, 30)];\
    //
\f1 \'c9\'e8\'d6\'c3\'b7\'e7\'b8\'f1\'d1\'f9\'ca\'bd
\f2 \
    ac.activityIndicatorViewStyle = UIActivityIndicatorViewStyleWhite;\
\
    [ac startAnimating];//
\f1 \'bf\'aa\'ca\'bc\'b6\'af\'bb\'ad
\f2 \
    \
    BOOL is = ac.isAnimating;//
\f1 \'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'b6\'af\'bb\'ad
\f2 \
    \
    //
\f1 \'b7\'c5\'b4\'f3\'c8\'fd\'b1\'b6
\f2 \
    ac.transform = CGAffineTransformMakeScale(3, 3);\
    \
    [ac stopAnimating];//
\f1 \'cd\'a3\'d6\'b9\'b6\'af\'bb\'ad
\f2 \
    \
    //
\f1 \'c6\'f4\'b6\'af\'b6\'af\'bb\'ad
\f2  
\f1 \'cd\'ac\'ca\'b1\'b4\'f2\'bf\'aa\'d7\'b4\'cc\'ac\'c0\'b8\'b5\'c4\'be\'d5\'bb\'a8\'b6\'af\'bb\'ad
\f2  YES
\f1 \'b6\'af\'bb\'ad
\f2  NO
\f1 \'cd\'a3\'d6\'b9
\f2 \
    //
\f1 \'d7\'b4\'cc\'ac\'cc\'f5\'be\'d5\'bb\'a8
\f2  
\f1 \'d3\'c9
\f2  UIApplication
\f1 \'b6\'d4\'cf\'f3\'bf\'d8\'d6\'c6
\f2 \
    [UIApplication sharedApplication].networkActivityIndicatorVisible = YES;\

\f1 \'bf\'aa\'b9\'d8
\f2 (UISwitch)\
    UISlider *slider = [[UISlider alloc] initWithFrame:CGRectMake(50, 300, 200, 30)];\
    // 
\f1 \'c9\'e8\'d6\'c3\'bf\'aa\'b9\'d8\'b4\'f2\'bf\'aa\'d1\'d5\'c9\'ab
\f2 \
    swi.onTintColor = [UIColor blackColor];\
    // 
\f1 \'c9\'e8\'d6\'c3\'bf\'aa\'b9\'d8\'d1\'d5\'c9\'ab
\f2 \
    swi.thumbTintColor = [UIColor greenColor];\
    // 
\f1 \'c9\'e8\'d6\'c3\'cb\'fb\'b5\'c4\'d7\'ee\'d0\'a1\'d6\'b5
\f2 \
    slider.minimumTrackTintColor = [UIColor yellowColor];\
    // 
\f1 \'c9\'e8\'d6\'c3\'cb\'fb\'b5\'c4\'d7\'ee\'b4\'f3\'d6\'b5
\f2 \
    slider.maximumTrackTintColor = [UIColor orangeColor];\
    // 
\f1 \'bb\'ac\'b6\'af\'ca\'b1\'ca\'c7\'b7\'f1\'b4\'a5\'b7\'a2\'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe
\f2 \
    slider.continuous = NO;\
    // 
\f1 \'c9\'e8\'d6\'c3\'bf\'aa\'b9\'d8\'b1\'b3\'be\'b0\'c9\'ab\'a3\'a8\'bc\'d3\'b8\'f6\'d4\'b2\'bd\'c7\'a3\'a9
\f2 \
    swi.backgroundColor = [UIColor yellowColor];\
    swi.layer.cornerRadius = 20;\
    // 
\f1 \'b3\'f5\'ca\'bc\'bb\'af\'ce\'aa\'b4\'f2\'bf\'aa\'d7\'b4\'cc\'ac
\f2 \
    swi.on = YES;\
    // 
\f1 \'cc\'ed\'bc\'d3\'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe
\f2 \
    [slider addTarget:self action:@selector(slider:) forControlEvents:UIControlEventValueChanged];\

\f1 \'cc\'e1\'ca\'be\'bf\'f2
\f2 (UIActionSheet)\
    UIActionSheet * acSheet = [[UIActionSheet alloc]initWithTitle:@"
\f1 \'b7\'d6\'cf\'ed
\f2 " delegate self cancelButtonTitle:@"
\f1 \'b7\'b5\'bb\'d8
\f2 "destructiveButtonTitle:@"
\f1 \'cf\'fa\'bb\'d9
\f2 "otherButtonTitles:@"
\f1 \'d0\'c2\'c0\'cb
\f2 ",@"
\f1 \'ce\'a2\'b2\'a9
\f2 ",@"
\f1 \'ce\'a2\'c1\'c4
\f2 ",nil];\
    //
\f1 \'c9\'e8\'d6\'c3\'b8\'f1\'ca\'bd
\f2 \
    acSheet.actionSheetStyle = UIActionSheetStyleAutomatic;\
\
===UIAction
\f1 \'b4\'fa\'c0\'ed\'b7\'bd\'b7\'a8
\f2 ===(acSheet.delegate = self;)\
-(void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex\{\
    NSLog(@"
\f1 \'b5\'e3\'bb\'f7\'c1\'cb
\f2 %d
\f1 \'b0\'b4\'c5\'a5
\f2 ",buttonIndex);\
    switch (buttonIndex) \{\
        case 0:\
            NSLog(@"qqq");\
            break;\
        case 1:\
            NSLog(@"aaa");\
            break;\
        default:\
            NSLog(@"www");\
            break;\
    \}\
\}\

\f1 \'be\'af\'b8\'e6\'bf\'f2
\f2 (UIAlert)\
(
\f1 \'b5\'b1
\f2 alertview 
\f1 \'cf\'d4\'ca\'be\'b5\'c4\'ca\'b1\'ba\'f2
\f2  
\f1 \'c6\'e4\'cb\'fb\'ca\'d3\'cd\'bc\'b6\'bc\'b2\'bb\'b9\'a4\'d7\'f7
\f2 )\
    //
\f1 \'cf\'c2\'c3\'e6\'c8\'ce\'ba\'ce\'b2\'ce\'ca\'fd\'c8\'e7\'b9\'fb\'b6\'bc\'b2\'bb\'d0\'e8\'d2\'aa
\f2  
\f1 \'b6\'bc\'bf\'c9\'d2\'d4\'c9\'e8\'d6\'c3
\f2 nil\
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Doh" message:@"0112" delegate:self cancelButtonTitle:@"Done" otherButtonTitles:@"Cancel", @"11", nil];\
    //
\f1 \'c9\'e8\'d6\'c3\'b7\'e7\'b8\'f1
\f2  
\f1 \'b5\'c7\'c2\'bd\'bf\'f2
\f2 \
    alert.alertViewStyle = UIAlertViewStyleLoginAndPasswordInput;\
    //
\f1 \'cc\'ed\'bc\'d3
\f2 button\
    [alertView addButtonWithTitle:@"<-->"];\
    //
\f1 \'b7\'b5\'bb\'d8\'c4\'b3\'d2\'bb\'b8\'f6
\f2 button 
\f1 \'b5\'c4\'b1\'ea\'cc\'e2
\f2 \
    for (int i = 0; i < 4; i ++) \{\
        NSString * buttontitle = [alertView buttonTitleAtIndex:i];\
        NSLog(@"%@",buttontitle);\
    \}\
    //
\f1 \'c8\'a1\'cf\'fb\'b5\'c4\'b1\'ea\'cc\'e2\'ca\'c7\'b5\'da\'d2\'bb\'b8\'f6
\f2 \
    NSString * buttontitle = [alertView buttonTitleAtIndex:0];\
    //
\f1 \'d6\'d8\'d0\'c2\'c9\'e8\'d6\'c3
\f2 title  message\
    alertView.title = @"
\f1 \'d6\'d8\'d0\'c2\'c9\'e8\'d6\'c3
\f2 title";\
    alertView.message = @"
\f1 \'d6\'d8\'d0\'c2\'c9\'e8\'d6\'c3\'cf\'fb\'cf\'a2
\f2 ";\
    //alertView  
\f1 \'ce\'de\'d0\'e8\'cc\'ed\'bc\'d3\'b8\'b8\'ca\'d3\'cd\'bc
\f2  
\f1 \'d6\'b1\'bd\'d3
\f2 show
\f1 \'cf\'d4\'ca\'be
\f2   
\f1 \'c6\'e4\'ca\'b5\'ca\'c7\'d6\'b1\'bd\'d3\'cc\'ed\'bc\'d3\'b5\'bd
\f2 window
\f1 \'c9\'cf
\f2 \
    [alert show];\
===
\f1 \'be\'af\'ca\'be\'bf\'f2\'b5\'c4\'b4\'fa\'c0\'ed\'b7\'bd\'b7\'a8
\f2 UIAlertViewDelegate===(alertView.delegate = self;)\
//
\f1 \'b5\'b1\'c4\'b3\'d2\'bb\'b8\'f6\'bc\'fc\'b1\'bb\'b5\'e3\'bb\'f7\'c1\'cb
\f2 \
-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex\
\{\
    NSLog(@"
\f1 \'b5\'e3\'bb\'f7\'c1\'cb
\f2 %ld
\f1 \'b0\'b4\'c5\'a5
\f2 ",(long)buttonIndex);\
    switch (buttonIndex) \{\
        case 0:\
            NSLog(@"
\f1 \'c2\'f2\'b2\'cb
\f2 ");\
            break;\
        case 1:\
            NSLog(@"
\f1 \'c2\'f2\'cb\'ae\'b9\'fb
\f2 ");    \
            break;\
        default:\
            break;\
    \}\
\}\
//
\f1 \'d4\'da\'c4\'b3\'d0\'a9\'b7\'e7\'b8\'f1\'cf\'c2\'a3\'ac\'bd\'ab\'d2\'aa\'b1\'e0\'bc\'ad
\f2 textfield 
\f1 \'cd\'a8\'b9\'fd\'b7\'b5\'bb\'d8\'d6\'b5
\f2  
\f1 \'be\'f6\'b6\'a8\'ca\'c7\'b7\'f1\'d4\'ca\'d0\'ed\'b5\'da\'d2\'bb\'b8\'f6
\f2 button
\f1 \'b1\'bb\'b5\'e3\'bb\'f7
\f2 \
- (BOOL)alertViewShouldEnableFirstOtherButton:(UIAlertView *)alertView\
\{\
    if (alertView.alertViewStyle == UIAlertViewStyleLoginAndPasswordInput ) \{\
        //
\f1 \'b4\'d3
\f2 Alertview
\f1 \'c8\'a1\'b3\'f6
\f2 TextField\
        UITextField * tf = [alertView textFieldAtIndex:0];\
 \
        if (tf.text.length < 7) \{\
            return YES;\
        \}\
    \}   \
    return NO;  \
\}\

\f1 \'b2\'bd\'ca\'fd\'c6\'f7
\f2 (UIStepper)\
    UIStepper *stepper = [[UIStepper alloc] initWithFrame:CGRectMake(190, 120, 50, 30)];\
    //
\f1 \'c9\'e8\'d6\'c3\'b5\'b1\'c7\'b0\'d6\'b5
\f2 \
    stepper.value = 0;\
    //
\f1 \'d7\'ee\'b4\'f3\'d6\'b5
\f2  
\f1 \'d7\'ee\'d0\'a1\'d6\'b5
\f2 \
    stepper.maximumValue = 231;\
    stepper.minimumValue = 0;\
    //
\f1 \'c9\'e8\'d6\'c3\'bd\'d7\'d4\'be\'d6\'b5
\f2 \
    stepper.stepValue = 2;\
    //
\f1 \'c9\'e8\'d6\'c3\'d1\'ad\'bb\'b7
\f2  
\f1 \'d7\'ee\'b4\'f3
\f2  
\f1 \'d7\'ee\'d0\'a1
\f2  
\f1 \'d7\'ee\'b4\'f3
\f2  
\f1 \'d7\'ee\'d0\'a1
\f2 \
    stepper.wraps = YES;\
    //
\f1 \'d7\'d4\'b6\'af\'bc\'d3\'bc\'f5
\f2 \
    stepper.autorepeat = YES;\
    //
\f1 \'ef\'ce\'bf\'d5\'d1\'d5\'c9\'ab
\f2  
\f1 \'bc\'b4\'b1\'df\'bf\'f2\'ba\'cd
\f2 - +
\f1 \'d1\'d5\'c9\'ab
\f2 \
    stepper.tintColor = [UIColor blackColor];\
    //
\f1 \'c9\'e8\'d6\'c3\'b1\'b3\'be\'b0\'cd\'bc\'c6\'ac
\f2 \
    [stepper setBackgroundImage:[[UIImage imageNamed:@"4.png"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal]  forState:UIControlStateNormal];\
    //
\f1 \'c9\'e8\'d6\'c3\'bc\'f5\'ba\'c5\'cd\'bc\'c6\'ac
\f2 \
    [stepper setDecrementImage:[[UIImage imageNamed:@"1.png"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] forState:UIControlStateNormal];\
    //
\f1 \'c9\'e8\'d6\'c3\'bc\'d3\'ba\'c5\'cd\'bc\'c6\'ac
\f2 \
    [stepper setIncrementImage:[[UIImage imageNamed:@"1.png"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] forState:UIControlStateNormal];\
    //
\f1 \'c9\'e8\'d6\'c3\'d6\'d0\'bc\'e4\'cd\'bc\'c6\'ac
\f2 \
    UIImage * image = [[UIImage imageNamed:@"1.png"]stretchableImageWithLeftCapWidth:0 topCapHeight:10];\
    [stepper setDividerImage:image forLeftSegmentState:UIControlStateNormal rightSegmentState:UIControlStateNormal];\
    //
\f1 \'cc\'ed\'bc\'d3\'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe
\f2 \
    [stepper addTarget:self action:@selector(stepperRun:) forControlEvents:UIControlEventValueChanged];\

\f1 \'b7\'d6\'b6\'ce\'d1\'a1\'d4\'f1\'bf\'f2
\f2 (UISegmentedControl)\
    NSArray *itemArray = @[@"A", @"B", @"C", @"D"];\
    UISegmentedControl *seg = [[UISegmentedControl alloc] initWithItems:itemArray];\
    seg.frame = CGRectMake(50, 350, 120, 30);\
    //
\f1 \'c9\'e8\'d6\'c3\'ef\'ce\'bf\'d5\'d1\'d5\'c9\'ab
\f2  
\f1 \'bc\'b4\'d7\'d6\'ba\'cd\'bf\'f2\'b5\'c4\'d1\'d5\'c9\'ab
\f2 \
    seg.tintColor = [UIColor blackColor];\
    //
\f1 \'c9\'e8\'d6\'c3\'c4\'ac\'c8\'cf\'d1\'a1\'d6\'d0\'b5\'c4
\f2 \
    seg.selectedSegmentIndex = 2;\
    //
\f1 \'c9\'e8\'d6\'c3\'b2\'bb\'d4\'ca\'d0\'ed\'d1\'a1\'d6\'d0\'a3\'ac\'b5\'e3\'bb\'f7\'ba\'f3\'bb\'d6\'b8\'b4
\f2 \
    seg.momentary = YES;\
    //
\f1 \'bb\'f1\'b5\'c3\'c4\'b3\'b8\'f6\'b1\'ea\'cc\'e2
\f2 \
    [seg titleForSegmentAtIndex:0];\
    //
\f1 \'bb\'f1\'b5\'c3\'cd\'bc\'c6\'ac
\f2 \
    [seg imageForSegmentAtIndex:0];\
    //
\f1 \'b7\'d6\'b6\'ce\'d1\'a1\'d4\'f1\'bf\'f2\'b5\'c4\'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe
\f2 \
    [seg addTarget:self action:@selector(segRun:) forControlEvents:UIControlEventValueChanged];\
\
===
\f1 \'b7\'d6\'b6\'ce\'d1\'a1\'d4\'f1\'bf\'f2\'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe
\f2 ===\
-(void)segRun:(UISegmentedControl *)seg\{\
    if (seg.selectedSegmentIndex == 1) \{\
        [seg removeSegmentAtIndex:3 animated:YES];\
    \}else if (seg.selectedSegmentIndex == 0)\{\
        [seg insertSegmentWithTitle:@"New" atIndex:2 animated:YES];\
    \}\
\}\

\f1 \'bb\'ac\'bf\'e9
\f2 (UISlide)\
    // 
\f1 \'b3\'f5\'ca\'bc\'bb\'af\'d2\'bb\'b8\'f6\'bb\'ac\'bf\'e9
\f2 (
\f1 \'b2\'bb\'c4\'dc\'b8\'c4\'b1\'e4\'b1\'be\'c9\'ed\'b5\'c4\'b8\'df
\f2 )\
    UISlider *slider = [[UISlider alloc] initWithFrame:CGRectMake(50, 300, 200, 30)];\
    // 
\f1 \'c9\'e8\'d6\'c3\'cb\'fb\'b5\'c4\'d7\'ee\'d0\'a1\'d6\'b5
\f2 \
    slider.minimumTrackTintColor = [UIColor yellowColor];\
    // 
\f1 \'c9\'e8\'d6\'c3\'cb\'fb\'b5\'c4\'d7\'ee\'b4\'f3\'d6\'b5
\f2 \
    slider.maximumTrackTintColor = [UIColor orangeColor];\
    // 
\f1 \'c9\'e8\'d6\'c3\'b3\'f5\'ca\'bc\'ce\'bb\'d6\'c3
\f2 \
    slider.value = 80;\
    // 
\f1 \'c9\'e8\'d6\'c3\'bb\'ac\'bf\'e9\'cd\'bc\'c6\'ac
\f2 \
    [slider setThumbImage:[UIImage imageNamed:@"1.png"] forState:UIControlStateNormal];\
    // 
\f1 \'bb\'ac\'b6\'af\'ca\'b1\'ca\'c7\'b7\'f1\'b4\'a5\'b7\'a2\'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe
\f2 \
    slider.continuous = NO;\
    // 
\f1 \'bb\'ac\'bf\'e9\'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe
\f2 \
    [slider addTarget:self action:@selector(slider:) forControlEvents:UIControlEventValueChanged];\

\f1 \'ce\'c4\'b1\'be\'ca\'d3\'cd\'bc
\f2 (UIScrollView)\
    UITextView * tx = [[UITextView alloc]initWithFrame:CGRectMake(20, 80, 280, 60)];\
    //
\f1 \'c9\'e8\'d6\'c3\'b2\'bb\'c1\'f4\'b0\'d7
\f2 (
\f1 \'c1\'f4\'b0\'d7\'d7\'f7\'d3\'c3\'ca\'c7\'b5\'b1
\f2 UIScrollView
\f1 \'c8\'ab\'c6\'c1\'ca\'b1\'ba\'f2\'a3\'ac\'c4\'da\'c8\'dd\'bb\'e1\'d7\'d4\'b6\'af\'b3\'f6\'cf\'d6\'d4\'da\'b5\'bc\'ba\'bd\'cc\'f5\'cf\'c2
\f2 )\
    self.automaticallyAdjustsScrollViewInsets = NO;\
    //
\f1 \'c9\'e8\'d6\'c3\'d4\'ca\'d0\'ed\'bb\'f2\'bd\'fb\'d6\'b9\'b9\'f6\'b6\'af
\f2 \
    tx.scrollEnabled = NO;\
    //
\f1 \'b5\'af\'b3\'f6\'d7\'d4\'b6\'a8\'d2\'e5\'bc\'fc\'c5\'cc
\f2 \
    tx.inputView = nil;\
    //
\f1 \'c9\'e8\'d6\'c3\'bc\'fc\'c5\'cc\'d1\'f9\'ca\'bd
\f2 \
    tx.keyboardAppearance = UIKeyboardAppearanceAlert;\
    //
\f1 \'c9\'e8\'d6\'c3\'bc\'fc\'c5\'cc\'c0\'e0\'d0\'cd
\f2 \
    tx.keyboardType = UIKeyboardTypeNumberPad;\
===
\f1 \'ce\'c4\'b1\'be\'ca\'d3\'cd\'bc\'b5\'c4\'b4\'fa\'c0\'ed\'b7\'bd\'b7\'a8
\f2 UITextViewDelegate===(tx.delegate = self;)\
- (BOOL)textViewShouldBeginEditing:(UITextView *)textView\
\{\
    NSLog(@"
\f1 \'bf\'aa\'ca\'bc\'b1\'e0\'bc\'ad
\f2 ");\
    return YES; //YES 
\f1 \'d4\'ca\'d0\'ed
\f2  NO
\f1 \'a1\'a2\'b2\'bb\'d4\'ca\'d0\'ed
\f2 \
\}\
- (BOOL)textViewShouldEndEditing:(UITextView *)textView\
\{\
    NSLog(@"
\f1 \'bc\'b4\'bd\'ab\'bd\'e1\'ca\'f8\'b1\'e0\'bc\'ad
\f2 ");\
    return YES; //YES 
\f1 \'d4\'ca\'d0\'ed
\f2  NO
\f1 \'a1\'a2\'b2\'bb\'d4\'ca\'d0\'ed
\f2 \
\}\
- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text\
\{\
    NSLog(@"
\f1 \'b7\'a2\'c9\'fa\'d0\'de\'b8\'c4
\f2 ");\
    //    range.location 
\f1 \'ca\'c7\'b9\'e2\'b1\'ea\'ce\'bb\'d6\'c3
\f2 \
    //    text 
\f1 \'ca\'c7\'bc\'b4\'bd\'ab\'b2\'e5\'c8\'eb\'b5\'c4\'ce\'c4\'d7\'d6
\f2 \
    return YES; //YES 
\f1 \'d4\'ca\'d0\'ed
\f2  NO
\f1 \'a1\'a2\'b2\'bb\'d4\'ca\'d0\'ed\'d0\'de\'b8\'c4
\f2 \
\}\
\

\f1 \'ca\'d6\'ca\'c6\'a3\'ba
\f2 ===
\f1 \'b4\'b4\'bd\'a8
\f2 UIView=== [view addGestureRecognizer:
\f1 \'ca\'d6\'ca\'c6\'c3\'fb
\f2 ];\
===Touch
\f1 \'b4\'a5\'c3\'fe\'ca\'d6\'ca\'c6
\f2 ===(
\f1 \'c8\'ce\'ba\'ce\'ca\'d3\'cd\'bc\'b6\'bc\'c4\'dc\'d6\'d8\'d0\'b4\'b8\'c3\'b7\'bd\'b7\'a8
\f2 )\
-(void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event\
\{NSLog(@"
\f1 \'bf\'aa\'ca\'bc\'b4\'a5\'c3\'fe
\f2 ");\}\
- (void)touchesCancelled:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event\
\{NSLog(@"
\f1 \'d2\'e2\'cd\'e2\'c8\'a1\'cf\'fb\'b4\'a5\'c3\'fe
\f2 ");\}\
- (void)touchesEnded:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event\
\{NSLog(@"
\f1 \'b4\'a5\'c3\'fe\'bd\'e1\'ca\'f8
\f2 ");\}\
-(void)touchesMoved:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event\
\{NSLog(@"
\f1 \'b4\'a5\'c3\'fe\'d2\'c6\'b6\'af\'b9\'ec\'bc\'a3
\f2 "); \
    UIView * view = [self.view viewWithTag:101];\
#if 1\
    //
\f1 \'c8\'a1\'b3\'f6\'b5\'a5\'b5\'e3\'b4\'a5\'c3\'fe\'b5\'c4\'d7\'f8\'b1\'ea
\f2 \
    UITouch * touch = [touches anyObject];\
    CGPoint  point = [touch locationInView:self.view];\
    view.center = point;\
#else\
    //
\f1 \'c8\'a1\'b3\'f6\'b6\'e0\'b5\'e3\'d7\'f8\'b1\'ea
\f2 \
    NSSet * touchesset = [event allTouches];\
    for (UITouch * touch in touchesset) \{\
        NSLog(@"%@",NSStringFromCGPoint([touch locationInView:self.view]));\
    \}\
#endif\
\}\
Tap
\f1 \'b5\'a5\'bb\'f7
\f2 (UITapGestureReconizer)\
    //
\f1 \'cc\'ed\'bc\'d3\'c7\'c3\'bb\'f7\'ca\'c2\'bc\'fe
\f2 \
    UITapGestureRecognizer *tgr = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(onTap:)];\
    //
\f1 \'b5\'a5\'bb\'f7\'b4\'ce\'ca\'fd
\f2 \
    tgr.numberOfTapsRequired = 1;\
    //
\f1 \'cc\'ed\'bc\'d3\'b5\'bd\'c8\'ce\'d2\'e2\'ca\'d3\'cd\'bc\'c9\'cf
\f2 \
    [view addGestureRecognizer:tgr];\
    //
\f1 \'d2\'bb\'b8\'f6\'ca\'d3\'cd\'bc\'c9\'cf\'ca\'c7\'bf\'c9\'d2\'d4\'cc\'ed\'bc\'d3\'b5\'a5\'bb\'f7\'ba\'cd\'cb\'ab\'bb\'f7\'ca\'c2\'bc\'fe
\f2 \
    UITapGestureRecognizer *tgrDouble = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(onTapDouble:)];\
    tgrDouble.numberOfTapsRequired = 2;\
    [view addGestureRecognizer:tgrDouble];\
    //
\f1 \'c9\'e8\'d6\'c3\'b5\'a5\'bb\'f7\'bd\'f6\'d4\'da\'cb\'ab\'bb\'f7\'b2\'bb\'b3\'c9\'c1\'a2\'ca\'b1\'ba\'f2\'c9\'fa\'d0\'a7
\f2 \
    [tgr requireGestureRecognizerToFail:tgrDouble];\
    //
\f1 \'c8\'fd\'bb\'f7
\f2 \
    UITapGestureRecognizer *tgrTriple = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(onTapTriple:)];\
    tgrTriple.numberOfTapsRequired = 3;\
    [tgrDouble requireGestureRecognizerToFail:tgrTriple];\
    [view addGestureRecognizer:tgrTriple];\
===
\f1 \'b5\'a5\'bb\'f7\'ca\'c2\'bc\'fe
\f2 ===\
-(void)onTap:(UITapGestureRecognizer *)tgr\{\
    NSLog(@"
\f1 \'b1\'bb\'b5\'a5\'bb\'f7\'c1\'cb
\f2 ");\
\}\
LongPress
\f1 \'b3\'a4\'b0\'b4
\f2 (UILongPressGestureRecognizer)\
    //
\f1 \'cc\'ed\'bc\'d3\'b3\'a4\'b0\'b4\'ca\'d6\'ca\'c6
\f2 \
    UILongPressGestureRecognizer *longPre = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(longPre:)];\
    //
\f1 \'c9\'e8\'d6\'c3\'d7\'ee\'d0\'a1\'b5\'c4\'b3\'a4\'b0\'b4\'ca\'b1\'bc\'e4
\f2 \
    longPre.minimumPressDuration = 1;\
    //
\f1 \'cc\'ed\'bc\'d3\'b3\'a4\'b0\'b4\'ca\'d6\'ca\'c6
\f2 \
    [view addGestureRecognizer:longPre];\
    //
\f1 \'c9\'e8\'d6\'c3\'d7\'ee\'c9\'d9\'d0\'e8\'d2\'aa\'bc\'b8\'b8\'f9\'ca\'d6\'d6\'b8
\f2  
\f1 \'b8\'b8\'c0\'e0\'ca\'f4\'d0\'d4
\f2 \
    longPre.numberOfTapsRequired = 2;\
===
\f1 \'b3\'a4\'b0\'b4\'ca\'c2\'bc\'fe
\f2 ===\
-(void)longPre:(UILongPressGestureRecognizer *)longPre\{\
    NSLog(@"
\f1 \'b3\'a4\'b0\'b4
\f2 ");\
    UIView *view = (id)[self.view viewWithTag:5];\
    CGFloat red = arc4random() % 256;\
    CGFloat gre = arc4random() % 256;\
    CGFloat blu = arc4random() % 256;\
    //
\f1 \'c9\'e8\'d6\'c3\'c3\'bf\'b8\'f6\'d7\'d3\'ca\'d3\'cd\'bc\'d1\'d5\'c9\'ab\'c3\'bf\'b4\'ce\'b2\'bb\'d2\'bb\'d1\'f9
\f2 \
    view.backgroundColor = [UIColor colorWithRed:red/255 green:gre/255 blue:blu/255 alpha:1];\
\}\
PanGer
\f1 \'cd\'cf\'b6\'af
\f2 (UIPanGestureRecognizer)\
    //
\f1 \'cc\'ed\'bc\'d3\'cd\'cf\'b6\'af\'ca\'d6\'ca\'c6
\f2 \
    UIPanGestureRecognizer *panGer = [[UIPanGestureRecognizer alloc] initWithTarget:self action:@selector(panGer:)];\
    //
\f1 \'c9\'e8\'d6\'c3\'cd\'cf\'b6\'af\'ca\'d6\'d6\'b8\'b7\'b6\'ce\'a7
\f2  
\f1 \'d7\'ee\'c9\'d9
\f2 1 
\f1 \'d7\'ee\'b4\'f3
\f2 2\
    panGer.minimumNumberOfTouches = 1;\
    panGer.maximumNumberOfTouches = 2;\
    [label addGestureRecognizer:panGer];\
===
\f1 \'cd\'cf\'b6\'af\'ca\'c2\'bc\'fe
\f2 ===\
-(void)panGer:(UIPanGestureRecognizer *)panGer\{\
    static CGPoint point;\
    UILabel *label = (id)[self.view viewWithTag:6];\
    label.text = @"Drag";\
    //
\f1 \'cd\'cf\'b6\'af\'d2\'bb\'bf\'aa\'ca\'bc
\f2 \
    if (panGer.state == UIGestureRecognizerStateBegan) \{\
        //
\f1 \'bc\'c7\'c2\'bc
\f2 label
\f1 \'b5\'c4\'d7\'f8\'b1\'ea
\f2 \
        point = label.center;\
        return;\
    \}\
    //
\f1 \'bb\'f1\'b5\'c3\'d4\'da\'d5\'fb\'b8\'f6\'cd\'cf\'b6\'af\'b9\'fd\'b3\'cc\'d6\'d0
\f2  
\f1 \'cf\'e0\'b6\'d4\'d5\'e2\'b8\'f6\'ca\'d3\'cd\'bc\'b5\'c4\'d7\'f8\'b1\'ea\'c6\'ab\'d2\'c6\'c1\'bf
\f2 \
    CGPoint ospoint = [panGer translationInView:self.view];\
    label.center = CGPointMake(point.x + ospoint.x, point.y + ospoint.y);\
\}\
Rotation
\f1 \'d0\'fd\'d7\'aa
\f2 (UIRotationGestureRecognizer)\
    //
\f1 \'d7\'a2\'d2\'e2
\f2  label
\f1 \'c4\'ac\'c8\'cf\'ce\'de\'b7\'a8\'cf\'ec\'d3\'a6\'ca\'c2\'bc\'fe
\f2  
\f1 \'cb\'f9\'d2\'d4\'ca\'d6\'ca\'c6\'cc\'ed\'bc\'d3\'c9\'cf\'c8\'a5\'ce\'de\'d0\'a7
\f2  imageView
\f1 \'d2\'b2\'d2\'bb\'d1\'f9
\f2  
\f1 \'cb\'f9\'d2\'d4\'b1\'d8\'d0\'eb\'c9\'e8\'d6\'c3\'d2\'bb\'cf\'c2\'ca\'f4\'d0\'d4
\f2 \
    label.userInteractionEnabled = YES;\
    //
\f1 \'cc\'ed\'bc\'d3\'d0\'fd\'d7\'aa\'ca\'d6\'ca\'c6
\f2 \
    UIRotationGestureRecognizer *rotGer = [[UIRotationGestureRecognizer alloc] initWithTarget:self action:@selector(rotGer:)];\
    [label addGestureRecognizer:rotGer];\
===
\f1 \'d0\'fd\'d7\'aa\'ca\'c2\'bc\'fe
\f2 ===\
//
\f1 \'d4\'da\'d0\'fd\'d7\'aa\'b5\'c4\'b9\'fd\'b3\'cc\'d6\'d0
\f2  
\f1 \'bb\'e1\'b2\'bb\'b6\'cf\'b5\'f7\'d3\'c3\'b8\'c3\'b7\'bd\'b7\'a8
\f2 \
-(void)rotGer:(UIRotationGestureRecognizer *)rotGer\{\
    static CGFloat trans;\
    UILabel *label = (id)[self.view viewWithTag:6];\
    label.text = @"Spin";\
    //
\f1 \'bb\'f1\'b5\'c3\'d0\'fd\'d7\'aa\'b5\'c4\'c6\'ab\'d2\'c6\'c1\'bf
\f2 \
    CGFloat rotation = rotGer.rotation;\
    label.transform = CGAffineTransformMakeRotation(trans + rotation);\
    if (rotGer.state == UIGestureRecognizerStateEnded) \{\
        trans = rotation + trans;\
    \}\
\}\
PinchGer
\f1 \'c4\'f3\'ba\'cf
\f2 (UIPinchGestureRecognizer)\
    //
\f1 \'d7\'a2\'d2\'e2
\f2  label
\f1 \'c4\'ac\'c8\'cf\'ce\'de\'b7\'a8\'cf\'ec\'d3\'a6\'ca\'c2\'bc\'fe
\f2  
\f1 \'cb\'f9\'d2\'d4\'ca\'d6\'ca\'c6\'cc\'ed\'bc\'d3\'c9\'cf\'c8\'a5\'ce\'de\'d0\'a7
\f2  imageView
\f1 \'d2\'b2\'d2\'bb\'d1\'f9
\f2  
\f1 \'cb\'f9\'d2\'d4\'b1\'d8\'d0\'eb\'c9\'e8\'d6\'c3\'d2\'bb\'cf\'c2\'ca\'f4\'d0\'d4
\f2 \
    label.userInteractionEnabled = YES;\
    //
\f1 \'cc\'ed\'bc\'d3\'c4\'f3\'ba\'cf\'ca\'d6\'ca\'c6
\f2 \
    UIPinchGestureRecognizer *pinGer = [[UIPinchGestureRecognizer alloc]initWithTarget:self action:@selector(pinGer:)];\
    [label addGestureRecognizer:pinGer];\
===
\f1 \'c4\'f3\'ba\'cf\'ca\'c2\'bc\'fe
\f2 ===\
//
\f1 \'d4\'da\'d0\'fd\'d7\'aa\'b5\'c4\'b9\'fd\'b3\'cc\'d6\'d0
\f2  
\f1 \'bb\'e1\'b2\'bb\'b6\'cf\'b5\'f7\'d3\'c3\'b8\'c3\'b7\'bd\'b7\'a8
\f2 \
-(void)pinGer:(UIPinchGestureRecognizer *)pinGer\{\
    static CGFloat pinch = 1;\
    UILabel *label = (id)[self.view viewWithTag:6];\
    label.text = @"deformation";\
    //
\f1 \'d2\'bb\'d6\'b1\'d4\'da\'b5\'c8\'b1\'c8\'cb\'f5\'b7\'c5
\f2    scale:
\f1 \'b1\'c8\'c0\'fd
\f2 \
    label.transform = CGAffineTransformMakeScale(pinGer.scale*pinch, pinGer.scale*pinch);\
    //
\f1 \'c3\'bf\'b4\'ce\'c4\'f3\'ba\'cf\'bd\'e1\'ca\'f8\'ca\'b1\'ba\'f2
\f2  
\f1 \'bc\'c7\'c2\'bc\'b5\'b1\'c7\'b0\'c4\'f3\'ba\'cf\'b5\'c4\'c0\'db\'bc\'d3
\f2 \
    if (pinGer.state == UIGestureRecognizerStateEnded) \{\
        pinch = pinch * pinGer.state;\
    \}\
\}\
Swipe
\f1 \'bb\'ac\'b6\'af
\f2 (UISwipeGestureRecognizer)\
    //
\f1 \'cc\'ed\'bc\'d3\'bb\'ac\'b6\'af\'ca\'d6\'ca\'c6
\f2 \
    UISwipeGestureRecognizer * swiptgr = [[UISwipeGestureRecognizer alloc]initWithTarget:self action:@selector(swiptgr:)];\
    //
\f1 \'d0\'e8\'d2\'aa\'c9\'e8\'d6\'c3\'bb\'ac\'b6\'af\'b7\'bd\'cf\'f2
\f2  
\f1 \'bc\'e0\'cc\'fd\'c4\'c4\'b8\'f6\'b7\'bd\'cf\'f2\'bb\'ac\'b6\'af
\f2  
\f1 \'d2\'bb\'b8\'f6\'ca\'d6\'ca\'c6
\f2  
\f1 \'d6\'bb\'c4\'dc\'bc\'e0\'cc\'fd\'d2\'bb\'b8\'f6\'b7\'bd\'cf\'f2
\f2 \
    swiptgr.direction = UISwipeGestureRecognizerDirectionRight;\
    /*\
     UISwipeGestureRecognizerDirectionRight = 1 << 0,\
     UISwipeGestureRecognizerDirectionLeft  = 1 << 1,\
     UISwipeGestureRecognizerDirectionUp    = 1 << 2,\
     UISwipeGestureRecognizerDirectionDown  = 1 << 3\
     */\
    [view addGestureRecognizer:swiptgr];\
===
\f1 \'bb\'ac\'b6\'af\'ca\'c2\'bc\'fe
\f2 ===\
-(void)swiptgr:(UISwipeGestureRecognizer *)tgr\
\{\
    UIView * view = (id)[self.view viewWithTag:101];\
    view.backgroundColor = [UIColor yellowColor];\
    CGFloat red = arc4random() % 256;\
    CGFloat gre = arc4random() % 256;\
    CGFloat blu = arc4random() % 256;\
    //
\f1 \'c9\'e8\'d6\'c3\'c3\'bf\'b8\'f6\'d7\'d3\'ca\'d3\'cd\'bc\'d1\'d5\'c9\'ab\'c3\'bf\'b4\'ce\'b2\'bb\'d2\'bb\'d1\'f9
\f2 \
    view.backgroundColor = [UIColor colorWithRed:red/255 green:gre/255 blue:blu/255 alpha:1];\
    \
    switch (tgr.direction) \{\
        case UISwipeGestureRecognizerDirectionRight:\
            NSLog(@"
\f1 \'cf\'f2\'d3\'d2\'bb\'ac\'b6\'af
\f2 ");\
            break;\
        case UISwipeGestureRecognizerDirectionLeft:\
            NSLog(@"
\f1 \'cf\'f2\'d7\'f3\'bb\'ac\'b6\'af
\f2 ");\
            break;\
        case UISwipeGestureRecognizerDirectionUp:\
            NSLog(@"
\f1 \'cf\'f2\'c9\'cf\'bb\'ac\'b6\'af
\f2 ");\
            break;\
        case UISwipeGestureRecognizerDirectionDown:\
            NSLog(@"
\f1 \'cf\'f2\'cf\'c2\'bb\'ac\'b6\'af
\f2 ");\
            break;\
        default:\
            break;\
    \}\
\}\
 // 
\f1 \'b0\'d1\'c7\'e1\'c9\'a8\'ca\'d6\'ca\'c6\'b5\'c4\'cb\'c4\'b8\'f6\'b7\'bd\'cf\'f2\'b7\'c5\'bd\'f8\'ca\'fd\'d7\'e9\'c0\'ef\'a3\'a8\'d2\'f2\'ce\'aa\'c7\'e1\'c9\'a8\'ca\'d6\'ca\'c6\'d6\'bb\'c4\'dc\'ca\'b6\'b1\'f0\'d2\'bb\'b8\'f6\'b7\'bd\'cf\'f2\'a3\'a9
\f2 \
 NSArray *array = @[[NSNumber numberWithUnsignedInteger:UISwipeGestureRecognizerDirectionDown], [NSNumber numberWithUnsignedInteger:UISwipeGestureRecognizerDirectionUp],[NSNumber numberWithUnsignedInteger:UISwipeGestureRecognizerDirectionLeft],[NSNumber numberWithUnsignedInteger:UISwipeGestureRecognizerDirectionRight],];\
 \
 // 
\f1 \'b4\'b4\'bd\'a8\'cb\'c4\'b8\'f6\'c7\'e1\'c9\'a8\'ca\'d6\'ca\'c6\'a3\'ac\'d3\'eb\'c9\'cf\'c3\'e6\'b5\'c4\'b7\'bd\'cf\'f2\'cf\'e0\'b6\'d4\'d3\'a6\'a3\'ac\'d5\'e2\'d1\'f9\'be\'cd\'c4\'dc\'ca\'b6\'b1\'f0\'cb\'c4\'b8\'f6\'b7\'bd\'cf\'f2\'c1\'cb
\f2 \
 for (int i=0; i<array.count; i++) \{\
 UISwipeGestureRecognizer *swiper = [[UISwipeGestureRecognizer alloc]initWithTarget:self action:@selector(swiperDirection:)];\
 // 
\f1 \'b0\'d1\'ca\'fd\'d7\'e9\'c0\'ef\'b5\'c4\'b7\'bd\'cf\'f2\'d2\'c0\'b4\'ce\'c4\'c3\'b3\'f6\'c0\'b4\'d7\'aa\'ce\'aa\'b6\'d4\'cf\'f3
\f2 \
 NSNumber *number = array[i];\
 // 
\f1 \'c9\'e8\'d6\'c3\'c7\'e1\'c9\'a8\'ca\'d6\'ca\'c6\'b5\'c4\'b7\'bd\'cf\'f2
\f2 \
 swiper.direction = [number unsignedIntegerValue];\
 \
 [self.image addGestureRecognizer:swiper];\
 \}\
\
PageController\
    //
\f1 \'b4\'b4\'bd\'a8
\f2 pageControl,
\f1 \'cd\'a8\'b3\'a3\'d3\'eb
\f2 ScrollView
\f1 \'d2\'bb\'c6\'f0\'ca\'b9\'d3\'c3
\f2 \
    _pageControl =[[UIPageControl alloc]initWithFrame:CGRectMake(0, self.view.frame.size.height - 60, self.view.frame.size.width, 40)];\
    //
\f1 \'c9\'e8\'d6\'c3\'d7\'dc\'d2\'b3\'ca\'fd
\f2 \
    _pageControl.numberOfPages = 16;\
    //
\f1 \'c9\'e8\'d6\'c3\'b5\'b1\'c7\'b0\'d1\'a1\'d6\'d0\'b5\'c4\'d2\'b3
\f2 \
    _pageControl.currentPage = 0;\
    //
\f1 \'c9\'e8\'d6\'c3\'d1\'a1\'d6\'d0\'d2\'b3\'b5\'c4\'d0\'a1\'d4\'b2\'b5\'e3\'b5\'c4\'d1\'d5\'c9\'ab
\f2 \
    _pageControl.currentPageIndicatorTintColor = [UIColor redColor];\
    //
\f1 \'c9\'e8\'d6\'c3\'b7\'c7\'d1\'a1\'d6\'d0\'d2\'b3\'b5\'c4\'d0\'a1\'d4\'b2\'b5\'e3\'b5\'c4\'d1\'d5\'c9\'ab
\f2 \
    _pageControl.pageIndicatorTintColor = [UIColor blueColor];\
    //
\f1 \'cc\'ed\'bc\'d3\'ca\'c2\'bc\'fe
\f2 \
    [_pageControl addTarget:self action:@selector(PageChange:) forControlEvents:UIControlEventValueChanged];\
===
\f1 \'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe
\f2 ===(
\f1 \'d1\'ad\'bb\'b7\'b2\'a5\'b7\'c5
\f2 )\
- (void)PageChange:(UIPageControl *)page\
\{\
    NSInteger index = _pageControl.currentPage;\
    UIScrollView *scrollView = (id)[self.view viewWithTag:1];\
    if (_pageControl.currentPage == _pageControl.numberOfPages - 1) \{\
        _pageControl.currentPage = 0;\
    \}\
    scrollView.contentOffset = CGPointMake(index * self.view.frame.size.width, 0);\
    NSLog(@"
\f1 \'b5\'b1\'c7\'b0\'d2\'b3\'c2\'eb\'a3\'ba
\f2 %d", _pageControl.currentPage);\
\}\
\
ScrollView\
    UIScrollView *scrollView = [[UIScrollView alloc]initWithFrame:self.view.bounds];\
    //
\f1 \'c9\'e8\'d6\'c3\'ca\'b5\'bc\'ca\'b5\'c4\'b3\'df\'b4\'e7
\f2 \
    scrollView.contentSize = CGSizeMake(self.view.frame.size.width * _pageControl.numberOfPages, self.view.frame.size.height - 20);\
    // 
\f1 \'c9\'e8\'d6\'c3\'b4\'fa\'c0\'ed
\f2 \
    scrollView.delegate = self;\
    [self.view addSubview:scrollView];\
    //
\f1 \'cc\'ed\'bc\'d3\'d7\'d3\'ca\'d3\'cd\'bc
\f2 \
    for (int i = 0; i < _pageControl.numberOfPages; i++) \{\
        UIImageView *imageView = [[UIImageView alloc] initWithFrame:CGRectMake(i * self.view.frame.size.width, 0, self.view.frame.size.width, self.view.frame.size.height - 20)];\
        imageView.image = [UIImage imageNamed:[NSString stringWithFormat:@"%d", i%16+1]];\
        [scrollView addSubview:imageView];\
    \}\
    //
\f1 \'c9\'e8\'d6\'c3\'b0\'b4\'d2\'b3\'b9\'f6\'b6\'af
\f2 \
    scrollView.pagingEnabled = YES;\
    //
\f1 \'c9\'e8\'d6\'c3\'b9\'f6\'b6\'af\'cc\'f5\'d2\'fe\'b2\'d8
\f2 \
    scrollView.showsHorizontalScrollIndicator = NO;\
===
\f1 \'be\'af\'ca\'be\'bf\'f2\'b5\'c4\'b4\'fa\'c0\'ed\'b7\'bd\'b7\'a8
\f2 UIAlertViewDelegate===(scrollView.delegate = self;)\
//
\f1 \'bc\'f5\'cb\'d9\'bd\'e1\'ca\'f8\'a3\'ac\'d2\'b2\'be\'cd\'ca\'c7\'cd\'a3\'d6\'b9\'b9\'f6\'b6\'af
\f2  //
\f1 \'bd\'e1\'ca\'f8\'bc\'f5\'cb\'d9
\f2 **********\
-(void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView\
\{   //
\f1 \'bd\'e1\'ca\'f8\'b9\'f6\'b6\'af
\f2 \
    NSLog(@"
\f1 \'bd\'e1\'ca\'f8\'bc\'f5\'cb\'d9
\f2 ");\
    //
\f1 \'c8\'e7\'b9\'fb\'d3\'d0\'c6\'e4\'cb\'fb\'b5\'c4\'bf\'d8\'bc\'fe\'d3\'eb
\f2 scrollView 
\f1 \'c1\'aa\'b6\'af\'a3\'ac\'c9\'e8\'d6\'c3\'d7\'ee\'d6\'d5\'b5\'c4\'ce\'bb\'d6\'c3\'a3\'ac\'d2\'d4\'bc\'b0\'cf\'e0\'b9\'d8\'ca\'fd\'be\'dd
\f2 \
    //
\f1 \'cd\'a8\'b9\'fd\'c6\'ab\'d2\'c6\'c1\'bf\'bc\'c6\'cb\'e3\'b3\'f6\'b5\'b1\'c7\'b0\'cf\'d4\'ca\'be\'b5\'c4\'ca\'c7\'b5\'da\'bc\'b8\'d5\'c5\'cd\'bc\'c6\'ac\'a3\'ac
\f2 _pageControl.currentPage
\f1 \'b1\'ed\'ca\'be\'d1\'a1\'d6\'d0\'b5\'c4\'d2\'b3\'a3\'ac\'b0\'d1\'cb\'e3\'b3\'f6\'b5\'c3\'bd\'e1\'b9\'fb\'b8\'b3\'b8\'f8
\f2 _pageControl.currentPage \
    NSInteger pageIndex = scrollView.contentOffset.x /self.view.frame.size.width;\
    NSLog(@"%f",scrollView.contentOffset.x);\
    //
\f1 \'c8\'e7\'b9\'fb\'b9\'f6\'b6\'af\'b5\'bd\'d7\'ee\'ba\'f3\'d2\'bb\'d5\'c5\'cd\'bc
\f2 \
    if (pageIndex == _pageControl.numberOfPages) \{\
        pageIndex = 0;\
        //
\f1 \'d6\'d8\'d6\'c3\'c6\'ab\'d2\'c6\'c1\'bf
\f2 \
        scrollView.contentOffset = CGPointZero;\
    \}\
    _pageControl.currentPage = pageIndex;\
\}\
-(void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate\{\
    NSLog(@"
\f1 \'bd\'e1\'ca\'f8\'cd\'cf\'d7\'a7
\f2 _pageControl.currentPage = %d", _pageControl.currentPage);\
\}\
-(void)scrollViewDidScroll:(UIScrollView *)scrollView\{\
    _pageControl.currentPage = (scrollView.contentOffset.x + scrollView.frame.size.width/2) / scrollView.frame.size.width;\
    NSLog(@"
\f1 \'b9\'f6\'b6\'af\'d6\'d0
\f2 _pageControl.currentPage = %d", _pageControl.currentPage);\
\}\
\
UITableView\
===
\f1 \'d7\'f1\'ca\'d8\'d0\'ad\'d2\'e9
\f2 <UITableViewDataSource,UITableViewDelegate>===\
@interface ViewController ()<UITableViewDataSource,UITableViewDelegate>\
//
\f1 \'a1\'be\'d7\'a2\'a1\'bf\'d6\'bb\'d2\'aa\'ca\'b9\'d3\'c3
\f2 UITableView  
\f1 \'b1\'d8\'d0\'eb\'d7\'f1\'ca\'d8\'c1\'bd\'b8\'f6\'d0\'ad\'d2\'e9
\f2 UITableViewDataSource 
\f1 \'ba\'cd
\f2 UITableViewDelegate\
// 
\f1 \'c6\'e4\'d6\'d0
\f2 UITableViewDataSource 
\f1 \'d3\'eb\'ca\'fd\'be\'dd\'d3\'d0\'b9\'d8
\f2   UITableViewDelegate
\f1 \'d3\'eb\'cd\'e2\'d0\'ce\'d3\'d0\'b9\'d8
\f2 \
\{\
    NSMutableArray *_dataArray;//
\f1 \'b3\'c9\'d4\'b1\'b1\'e4\'c1\'bf
\f2 (
\f1 \'b1\'a3\'b4\'e6\'ca\'fd\'be\'dd\'d4\'b4
\f2 ) 
\f1 \'d4\'da\'b5\'b1\'c7\'b0\'c0\'e0\'c0\'ef\'c3\'e6\'bf\'c9\'d7\'f6\'c8\'ab\'be\'d6
\f2 \
\}\
@property (nonatomic,strong) UITableView *myTableView;\
@end\
//
\f1 \'b5\'f7\'d3\'c3\'b8\'b8\'c0\'e0\'b1\'e0\'bc\'ad\'b7\'bd\'b7\'a8
\f2  
\f1 \'b2\'a2\'d6\'d8\'d0\'b4
\f2 \
-(void)setEditing:(BOOL)editing animated:(BOOL)animated\{\
    [super setEditing:editing animated:animated];\
    [_myTableView setEditing:editing animated:animated];\
\}\
//
\f1 \'c9\'e8\'d6\'c3\'b1\'e0\'bc\'ad\'c4\'a3\'ca\'bd
\f2  
\f1 \'bf\'c9\'b1\'e0\'bc\'ad\'ba\'f3
\f2  
\f1 \'d0\'e8\'d2\'aa\'cc\'e1\'bd\'bb
\f2 \
-(UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath\{\
    /*\
     UITableViewCellEditingStyleNone,\
     UITableViewCellEditingStyleDelete,\
     UITableViewCellEditingStyleInsert\
     */\
    if (indexPath.section == 0) \{\
        //
\f1 \'b5\'da\'d2\'bb\'d7\'e9
\f2  
\f1 \'c9\'be\'b3\'fd\'c4\'a3\'ca\'bd
\f2 \
        return UITableViewCellEditingStyleDelete;\
    \}else\{\
        //
\f1 \'c6\'e4\'cb\'fc\'d7\'e9
\f2  
\f1 \'d4\'f6\'bc\'d3\'c4\'a3\'ca\'bd
\f2 \
        return UITableViewCellEditingStyleInsert;\
    \}\
    //
\f1 \'b7\'b5\'bb\'d8\'bf\'c9\'b6\'e0\'c9\'be\'b3\'fd
\f2 cell\
    return UITableViewCellEditingStyleDelete | UITableViewCellEditingStyleInsert;\
\}\
//
\f1 \'b6\'d4\'d3\'a6\'b1\'e0\'bc\'ad\'b7\'bd\'b7\'a8\'b5\'c4\'ca\'b5\'cf\'d6
\f2  
\f1 \'cc\'e1\'bd\'bb\'b1\'e0\'bc\'ad\'d6\'ae\'ba\'f3
\f2  
\f1 \'ca\'fd\'be\'dd\'d4\'b4\'c0\'ef\'c3\'e6\'c9\'be\'b3\'fd\'b6\'d4\'d3\'a6\'b5\'c4\'ca\'fd\'d7\'e9\'d4\'aa\'cb\'d8\'bb\'f2\'d5\'df\'bc\'d3\'c8\'eb\'d0\'e8\'d2\'aa\'b5\'c4\'d4\'aa\'cb\'d8
\f2 \
-(void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath\{\
    if (editingStyle == UITableViewCellEditingStyleDelete) \{\
        //
\f1 \'c9\'be\'b3\'fd\'c7\'e9\'bf\'f6\'cf\'c2
\f2 \
        //1
\f1 \'a1\'a2\'b4\'d3\'ca\'fd\'d7\'e9\'c0\'ef\'c3\'e6\'c9\'be\'b3\'fd
\f2 \
        [_dataArray[indexPath.section] removeObjectAtIndex:indexPath.row];\
        //2
\f1 \'a1\'a2\'b4\'d3\'b1\'ed\'b8\'f1\'d6\'d0\'c9\'be\'b3\'fd
\f2 \
        /*\
         UITableViewRowAnimationFade,\
         UITableViewRowAnimationRight,\
         UITableViewRowAnimationLeft,\
         UITableViewRowAnimationTop,\
         UITableViewRowAnimationBottom,\
         UITableViewRowAnimationNone,\
         UITableViewRowAnimationMiddle,\
         UITableViewRowAnimationAutomatic\
         */\
        [_myTableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:UITableViewRowAnimationLeft];\
    \}else\{\
        NSString *insertStr = @"
\f1 \'ce\'d2\'ca\'c7\'d0\'c2\'d4\'f6\'bc\'d3\'b5\'c4
\f2 ";\
        //
\f1 \'d4\'f6\'bc\'d3\'c7\'e9\'bf\'f6\'cf\'c2
\f2 \
        //1
\f1 \'a1\'a2\'d4\'da\'ca\'fd\'d7\'e9\'d6\'d0\'bc\'d3\'c8\'eb\'d0\'c2\'b5\'c4\'d4\'aa\'cb\'d8
\f2 \
        [_dataArray[indexPath.section] insertObject:insertStr atIndex:indexPath.row];\
        //2
\f1 \'a1\'a2\'d4\'da\'b1\'ed\'b8\'f1\'d6\'d0\'b2\'e5\'c8\'eb
\f2 \
        [_myTableView insertRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:UITableViewRowAnimationRight];\
    \}\
\}\
//
\f1 \'d2\'c6\'b6\'af
\f2 cell 
\f1 \'b2\'bb\'b3\'a3\'d3\'c3\'a3\'ac\'d2\'aa\'c1\'cb\'bd\'e2
\f2 \
- (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)sourceIndexPath toIndexPath:(NSIndexPath *)destinationIndexPath\{\
\
    NSLog(@"
\f1 \'b4\'d3\'b5\'da
\f2 %d 
\f1 \'d2\'c6\'b5\'bd\'b5\'da
\f2 %d", sourceIndexPath.row, destinationIndexPath.row);\
    \
    NSString *num = [[_dataArray objectAtIndex:sourceIndexPath.section] objectAtIndex:sourceIndexPath.row];\
\
    [_dataArray[sourceIndexPath.section] removeObjectAtIndex:sourceIndexPath.row];\
    \
    [_dataArray[destinationIndexPath.section] insertObject:num atIndex:destinationIndexPath.row];\
\}\
/*\
 
\f1 \'b4\'b4\'bd\'a8\'ca\'fd\'be\'dd
\f2 \
 */\
-(void)createData\{\
    _dataArray = [[NSMutableArray alloc] init];\
    NSMutableArray *deleteArray = [[NSMutableArray alloc] init];\
    NSMutableArray *insertArray = [[NSMutableArray alloc] init];\
    \
    for (int i = 0; i < 10; i++) \{\
        NSString *deleStr = [NSString stringWithFormat:@"
\f1 \'ce\'d2\'c6\'e4\'ca\'b5\'ca\'c7\'b5\'da
\f2 %d
\f1 \'d0\'d0
\f2 ",i];\
        [deleteArray addObject:deleStr];\
    \}\
    for (int i = 0; i < 10; i++) \{\
        NSString *insertStr = [NSString stringWithFormat:@"
\f1 \'ce\'d2\'ca\'c7
\f2 %d",i];\
        [insertArray addObject:insertStr];\
    \}\
    [_dataArray addObject:deleteArray];\
    [_dataArray addObject:insertArray];\
\}\
/*1
\f1 \'a1\'a2\'d4\'da\'b7\'bd\'b7\'a8\'d6\'d0\'b4\'b4\'bd\'a8
\f2 UITableView\
 
\f1 \'b4\'b4\'bd\'a8\'b1\'ed\'b8\'f1\'ca\'d3\'cd\'bc
\f2 \
 
\f1 \'c0\'c1\'ba\'ba\'ca\'bd\'bc\'d3\'d4\'d8
\f2 UITableView\
 
\f1 \'ba\'c3\'b4\'a6\'a3\'ba
\f2 1
\f1 \'a1\'a2\'b7\'e2\'d7\'b0\'d0\'d4\'ba\'c3
\f2  
\f1 \'b6\'c0\'c1\'a2
\f2      2
\f1 \'a1\'a2\'d3\'c3\'b5\'c4\'ca\'b1\'ba\'f2\'bc\'d3\'d4\'d8
\f2  
\f1 \'bd\'da\'d4\'bc\'d7\'ca\'d4\'b4
\f2 \

\f1 \'a1\'be\'d7\'a2\'a1\'bf
\f2  
\f1 \'c0\'c1\'ba\'ba\'ca\'bd\'bc\'d3\'d4\'d8\'b2\'bb\'c4\'dc\'d3\'c3
\f2 _myTableView
\f1 \'b5\'f7\'d3\'c3
\f2   
\f1 \'b6\'f8\'ca\'c7\'d3\'c3
\f2 self.myTableView
\f1 \'b5\'f7\'d3\'c3
\f2 \
 
\f1 \'bc\'b4\'b2\'bb\'c4\'dc\'d3\'c3
\f2 self.view addSubview:_myTableView 
\f1 \'b6\'f8\'ca\'c7
\f2 self.view addSubview:self.myTableView
\f1 \'b7\'bd\'b7\'a8\'c8\'a5\'cc\'ed\'bc\'d3\'ca\'d3\'cd\'bc
\f2 \
 */\

\f1 \'d4\'da
\f2 DidLoad
\f1 \'c0\'ef\'c3\'e6\'cc\'ed\'bc\'d3\'ca\'d3\'cd\'bc
\f2 [self.view addSubview:self.myTableView];\
-(UITableView *)myTableView\{\
    if (_myTableView == nil) \{\
        /*\
         UITableViewStylePlain       
\f1 \'d7\'d4\'b6\'a8\'d2\'e5\'b5\'c4
\f2 (
\f1 \'d3\'c3\'b5\'c4\'b1\'c8\'bd\'cf\'c9\'d9
\f2 )\
         UITableViewStyleGrouped     
\f1 \'b5\'e7\'bb\'b0\'b1\'be\'b7\'e7\'b8\'f1
\f2  
\f1 \'be\'ad\'b3\'a3\'ca\'b9\'d3\'c3
\f2  
\f1 \'b7\'c7\'b3\'a3\'b6\'e0
\f2 \
         */\
        //
\f1 \'b4\'b4\'bd\'a8
\f2 _myTableView 
\f1 \'b7\'e7\'b8\'f1\'ce\'aa
\f2 UITableViewStylePlain 
\f1 \'b5\'e7\'bb\'b0\'b1\'be\'b7\'e7\'b8\'f1
\f2 \
        CGSize size = [UIScreen mainScreen].bounds.size;\
    //
\f1 \'b4\'b4\'bd\'a8\'b1\'ed\'b8\'f1\'ca\'d3\'cd\'bc
\f2 \
        _myTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, size.width, size.height) style:UITableViewStylePlain];\
    //
\f1 \'c9\'e8\'d6\'c3\'b4\'fa\'c0\'ed
\f2 \
        _myTableView.delegate = self;\
        _myTableView.dataSource = self;\
    \}\
    return _myTableView;\
\}\
2
\f1 \'a1\'a2\'d4\'da
\f2 DidLoad
\f1 \'c0\'ef\'c3\'e6\'b4\'b4\'bd\'a8
\f2 UITableView\
    CGSize size = [UIScreen mainScreen].bounds.size;\
    //
\f1 \'b4\'b4\'bd\'a8\'b1\'ed\'b8\'f1\'ca\'d3\'cd\'bc
\f2 \
    _myTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, size.width, size.height) style:UITableViewStylePlain];\
    //
\f1 \'c9\'e8\'d6\'c3\'b4\'fa\'c0\'ed
\f2 \
    _myTableView.delegate = self;\
    _myTableView.dataSource = self;\
    //
\f1 \'cc\'ed\'bc\'d3\'ca\'d3\'cd\'bc
\f2 \
    [self.view addSubview:_myTableView];\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
//
\f1 \'b7\'d6\'d7\'e9
\f2 \
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView\{\
    return 2;\
\}\

\f1 \'b8\'c3\'d0\'ad\'d2\'e9\'b1\'d8\'d0\'eb\'ca\'b5\'cf\'d6
\f2 //
\f1 \'b7\'b5\'bb\'d8\'b5\'da
\f2 section
\f1 \'d7\'e9\'b5\'c4\'d0\'d0\'ca\'fd\'a3\'ac
\f2 \
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section\{\
    return [_dataArray[section] count];\
\}\
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath\{\
    static NSString *cellID = @"cellID";\
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellID];\
    \
    /*\
     UITableViewCellStyleDefault      
\f1 \'c4\'ac\'c8\'cf\'b5\'c4
\f2  
\f1 \'b2\'bb\'cf\'d4\'ca\'be\'b8\'b1\'b1\'ea\'cc\'e2
\f2 \
     UITableViewCellStyleValue1       
\f1 \'d6\'f7\'b1\'ea\'cc\'e2\'d4\'da\'d7\'f3\'a3\'ac\'b8\'b1\'b1\'ea\'cc\'e2\'d4\'da\'d3\'d2
\f2 \
     UITableViewCellStyleValue2       
\f1 \'c3\'bb\'d3\'d0\'cd\'bc\'c6\'ac\'a3\'ac\'d6\'f7\'b1\'ea\'cc\'e2\'ca\'c7\'c0\'b6\'c9\'ab\'b5\'c4\'d7\'d6
\f2 \
     UITableViewCellStyleSubtitle     
\f1 \'d6\'f7\'b1\'ea\'cc\'e2\'d4\'da\'c9\'cf\'a3\'ac\'b8\'b1\'b1\'ea\'cc\'e2\'d4\'da\'cf\'c2
\f2 \
     */\
    if (cell == nil) \{\
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:cellID];\
    \}\
    \
    if (indexPath.section == 0) \{\
        cell.backgroundColor = [UIColor lightGrayColor];\
    \}\
    if (indexPath.section == 1) \{\
        cell.backgroundColor = [UIColor grayColor];\
    \}\
    cell.textLabel.text = @"
\f1 \'ce\'d2\'ca\'c7\'d6\'f7\'b1\'ea\'cc\'e2
\f2 ";\
    cell.detailTextLabel.text = @"
\f1 \'ce\'d2\'ca\'c7\'b8\'b1\'b1\'ea\'cc\'e2
\f2 ";\
    cell.imageView.image = [UIImage imageNamed:@"14"];\
    cell.textLabel.text = _dataArray[indexPath.section][indexPath.row];\
\
    cell.selectedBackgroundView = view;\
    \
    /*\
     UITableViewCellAccessoryNone,                        
\f1 \'ce\'de
\f2 \
     UITableViewCellAccessoryDisclosureIndicator,         
\f1 \'d5\'db\'ba\'c5
\f2 \
     UITableViewCellAccessoryDetailDisclosureButton,      
\f1 \'d0\'c5\'cf\'a2\'ba\'c5\'bc\'d3\'d5\'db\'ba\'c5
\f2 \
     UITableViewCellAccessoryCheckmark,                   
\f1 \'b6\'d4\'b9\'b4
\f2 \
     UITableViewCellAccessoryDetailButton                 
\f1 \'b0\'b4\'c5\'a5
\f2 \
     */\
    cell.accessoryType = UITableViewCellAccessoryDetailButton;\
    return cell;\
\}\
===cell
\f1 \'b5\'c4\'b5\'e3\'bb\'f7\'ca\'b5\'cf\'d6\'b7\'bd\'b7\'a8
\f2 ===\
//cell
\f1 \'b5\'c4\'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe\'b7\'bd\'b7\'a8
\f2  
\f1 \'b2\'bb\'ca\'c7\'b1\'d8\'d0\'eb\'ca\'b5\'cf\'d6
\f2  
\f1 \'b5\'ab\'ca\'c7\'be\'ad\'b3\'a3\'d3\'c3\'b5\'bd
\f2 \
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath\{\
    NSLog(@"
\f1 \'ce\'d2\'b5\'e3\'bb\'f7\'c1\'cb\'b5\'da
\f2 %d
\f1 \'b5\'c4\'b5\'da
\f2 %d
\f1 \'d0\'d0
\f2 ", indexPath.section, indexPath.row);\
\}\
//cell
\f1 \'c5\'d4\'b1\'df\'b5\'c4\'d0\'a1\'b0\'b4\'c5\'a5\'b5\'e3\'bb\'f7\'ca\'c2\'bc\'fe
\f2  
\f1 \'b2\'bb\'ca\'c7\'b1\'d8\'d0\'eb\'ca\'b5\'cf\'d6
\f2 \
-(void)tableView:(UITableView *)tableView accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)indexPath\{\
    NSLog(@"
\f1 \'c4\'e3\'b5\'e3\'bb\'f7\'c1\'cb\'b5\'da
\f2 %d
\f1 \'d7\'e9\'a3\'ac\'b5\'da
\f2 %d
\f1 \'d0\'d0\'b5\'c4\'d0\'a1\'b0\'b4\'c5\'a5
\f2 ", indexPath.section, indexPath.row);\
\}\
===
\f1 \'b0\'b4\'c5\'a5
\f2 ===\
    UIBarButtonItem *editItem = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemEdit target:self action:@selector(editItem)];\
    self.navigationItem.leftBarButtonItem = editItem;\
    \
    _deleteItem = [[UIBarButtonItem alloc] initWithTitle:@"
\f1 \'c9\'be\'b3\'fd
\f2 " style:UIBarButtonItemStylePlain target:self action:@selector(deleteItem)];\
===
\f1 \'b0\'b4\'c5\'a5\'ca\'b5\'cf\'d6\'b7\'bd\'b7\'a8
\f2 ===\
-(void)editItem\{\
    //
\f1 \'b1\'e0\'bc\'ad\'ba\'cd\'b7\'c7\'b1\'e0\'bc\'ad
\f2 \
    _isEditing = !_isEditing;\
    [_myTableView setEditing:_isEditing animated:YES];\
    if (_isEditing) \{\
        self.navigationItem.rightBarButtonItem = _deleteItem;\
    \}else\{\
        self.navigationItem.rightBarButtonItem = nil;\
    \}\
\}\
-(void)deleteItem\{\
    // 
\f1 \'b0\'b4\'c1\'cb\'c9\'be\'b3\'fd\'b0\'b4\'c5\'a5\'a3\'ac\'be\'cd\'b0\'d1
\f2 deleteArray
\f1 \'b4\'d3\'d7\'dc\'b5\'c4\'ca\'fd\'be\'dd\'d4\'b4\'c0\'ef\'c9\'be\'b5\'f4
\f2 \
    [_dataArray removeObjectsInArray:_deleteArray];\
    //
\f1 \'cb\'a2\'d0\'c2\'b1\'ed\'b8\'f1\'ca\'d3\'cd\'bc
\f2 \
    [_myTableView reloadData];\
\}\
//
\f1 \'c9\'be\'b3\'fd\'b5\'c4\'d0\'d0\'bc\'d3\'c8\'eb
\f2 deleteArray
\f1 \'ca\'fd\'d7\'e9
\f2 \
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath\{\
    if (_isEditing) \{\
        NSString *deleteStr = _dataArray[indexPath.row];\
        [_deleteArray addObject:deleteStr];\
    \}\
\}\
\
UICollectionView\
===
\f1 \'d7\'f1\'ca\'d8\'d0\'ad\'d2\'e9
\f2 <UICollectionViewDataSource,UICollectionViewDelegate,UICollectionViewDelegateFlowLayout>=== \

\f1 \'d0\'e8\'d2\'aa\'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'c0\'e0\'bc\'cc\'b3\'d0
\f2 CollectionViewCell\
@interface ViewController ()<UICollectionViewDataSource,UICollectionViewDelegate,UICollectionViewDelegateFlowLayout>\
\{\
    NSMutableArray *_dataArray;//
\f1 \'ca\'fd\'be\'dd\'d4\'b4
\f2 \
    UICollectionView *_collectionView;\
    //UICollectionView iOS 6
\f1 \'d6\'ae\'ba\'f3\'b3\'f6\'cf\'d6\'b5\'c4\'bc\'af\'ba\'cf\'ca\'d3\'cd\'bc\'a3\'ac\'bc\'cc\'b3\'d0\'d3\'da
\f2 UIScrollView,
\f1 \'b6\'e0\'d3\'c3\'d3\'da\'d5\'b9\'ca\'be\'cd\'bc\'c6\'ac\'a3\'ac\'b5\'b1\'c8\'bb\'ca\'c7\'d2\'bb\'c6\'c1\'cf\'d4\'ca\'be\'b2\'bb\'c8\'ab\'b5\'c4
\f2 \
\}\
@end\
/*\
 
\f1 \'b4\'b4\'bd\'a8\'ca\'fd\'be\'dd
\f2 \
 */\
//
\f1 \'b0\'d1\'cd\'bc\'c6\'ac\'c3\'fb\'d7\'d6\'b4\'e6\'b5\'bd\'ca\'fd\'be\'dd\'d4\'b4\'ca\'fd\'d7\'e9\'d6\'d0
\f2 \
-(void)createDataSource\
\{\
    _dataArray = [[NSMutableArray alloc]init];\
    for (int i = 0; i <= 15; i++)\
    \{\
        NSString *imageName = [NSString stringWithFormat:@"10_%d.jpg",i];\
        [_dataArray addObject:imageName];\
    \}\
\}\
\
/*\
 
\f1 \'b4\'b4\'bd\'a8\'cd\'f8\'b8\'f1
\f2 \
 */\
//UICollectionViewLayout
\f1 \'ca\'c7\'d2\'bb\'b8\'f6\'b2\'bc\'be\'d6\'c0\'e0\'a3\'ac\'ca\'c7\'d2\'bb\'b8\'f6\'b3\'e9\'cf\'f3\'c0\'e0\'a3\'ac\'c6\'bb\'b9\'fb\'cc\'e1\'b9\'a9\'c1\'cb\'d2\'bb\'b8\'f6\'be\'df\'cc\'e5\'b5\'c4\'bc\'cc\'b3\'d0\'d3\'da\'cb\'fc\'b5\'c4\'c0\'e0
\f2 UICollectionViewFlowLayout
\f1 \'a3\'ac\'cd\'f8\'b8\'f1\'b2\'bc\'be\'d6\'c0\'e0\'a3\'ac\'b4\'b4\'bd\'a8
\f2 UICollectionView
\f1 \'ca\'b1\'a3\'ac\'d0\'e8\'d2\'aa\'d2\'bb\'b8\'f6\'b2\'bc\'be\'d6\'c0\'e0\'b5\'c4\'b6\'d4\'cf\'f3\'c0\'b4\'be\'f6\'b6\'a8
\f2 UICollectionView
\f1 \'b5\'c4\'b2\'bc\'be\'d6
\f2 \
    //
\f1 \'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'cd\'f8\'b8\'f1\'b2\'bc\'be\'d6\'b6\'d4\'cf\'f3
\f2 \
    UICollectionViewFlowLayout *layout = [[UICollectionViewFlowLayout alloc]init];\
    //
\f1 \'c9\'e8\'d6\'c3\'b9\'f6\'b6\'af\'b7\'bd\'cf\'f2
\f2  
\f1 \'a3\'a8\'d2\'bb\'b0\'e3\'ce\'aa\'d7\'dd\'cf\'f2\'a3\'a9
\f2 \
    layout.scrollDirection = UICollectionViewScrollDirectionHorizontal;\
    /*\
     
\f1 \'d7\'dd\'cf\'f2
\f2 \
     UICollectionViewScrollDirectionVertical,\
     
\f1 \'ba\'e1\'cf\'f2
\f2 \
     UICollectionViewScrollDirectionHorizontal\
     \
     */\
    //
\f1 \'c9\'e8\'d6\'c3\'d7\'ee\'d0\'a1\'b5\'c4\'d0\'d0\'bc\'e4\'be\'e0
\f2 \
    layout.minimumLineSpacing  = 5;\
    //
\f1 \'c9\'e8\'d6\'c3\'d7\'ee\'d0\'a1\'b5\'c4\'c1\'d0\'bc\'e4\'be\'e0
\f2 \
    layout.minimumInteritemSpacing = 5;\
    \
    //
\f1 \'b4\'b4\'bd\'a8
\f2 UICollectionView\
    _collectionView = [[UICollectionView alloc]initWithFrame:self.view.bounds collectionViewLayout:layout];\
    //
\f1 \'d6\'b8\'b6\'a8\'b4\'fa\'c0\'ed
\f2 \
    _collectionView.delegate = self;\
    //
\f1 \'d6\'b8\'b6\'a8\'ca\'fd\'be\'dd\'d4\'b4\'b4\'fa\'c0\'ed
\f2 \
    _collectionView.dataSource = self;\
    //
\f1 \'cc\'ed\'bc\'d3\'b5\'bd\'b5\'b1\'c7\'b0\'ca\'d3\'cd\'bc\'c9\'cf\'cf\'d4\'ca\'be
\f2 \
    [self.view addSubview:_collectionView];\
    _collectionView.backgroundColor = [UIColor yellowColor];\
    \
    //
\f1 \'cc\'e1\'c7\'b0\'b8\'e6\'cb\'df
\f2 _collectionView
\f1 \'d3\'c3\'ca\'b2\'c3\'b4\'ca\'d3\'cd\'bc\'d7\'f7\'ce\'aa\'cf\'d4\'ca\'be\'b5\'c4\'b8\'b4\'d3\'c3\'ca\'d3\'cd\'bc\'a3\'ac\'b2\'a2\'c7\'d2\'c9\'e8\'d6\'c3\'b8\'b4\'d3\'c3\'b1\'ea\'ca\'b6\'a3\'ac
\f2 @"MyCell"\
    [_collectionView registerClass:[MyCollectionViewCell class] forCellWithReuseIdentifier:@"MyCell"];\
\
//
\f1 \'b7\'b5\'bb\'d8
\f2 collectionView
\f1 \'c4\'b3\'d2\'bb\'d7\'e9\'d7\'dc\'b9\'b2\'cf\'d4\'ca\'be\'b5\'c4
\f2 Item
\f1 \'b8\'f6\'ca\'fd
\f2 \
-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section\
\{\
    return [_dataArray count];\
\}\
\
//
\f1 \'b4\'b4\'bd\'a8\'bb\'f2\'cb\'a2\'d0\'c2
\f2 cell\
-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath\
\{\
    static NSString *cellId = @"MyCell";\
    //_collectionView
\f1 \'b5\'bd\'b1\'ea\'ca\'b6\'ce\'aa
\f2 @"MyCell" 
\f1 \'b5\'c4\'b8\'b4\'d3\'c3\'b3\'d8\'d6\'d0\'c8\'a5\'d5\'d2\'bf\'d5\'cf\'d0\'b5\'c4
\f2 cell(item),
\f1 \'c8\'e7\'b9\'fb\'d3\'d0\'d6\'b1\'bd\'d3\'c4\'c3\'c0\'b4\'ca\'b9\'d3\'c3\'a3\'ac\'c8\'e7\'b9\'fb\'c3\'bb\'d3\'d0\'be\'cd\'b4\'b4\'bd\'a8
\f2 \
    MyCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:cellId forIndexPath:indexPath];\
    //
\f1 \'c9\'e8\'d6\'c3\'cf\'d4\'ca\'be\'ce\'c4\'d7\'d6
\f2 \
    cell.title = [NSString stringWithFormat:@"
\f1 \'b5\'da
\f2 %ld
\f1 \'b8\'f6
\f2 ",indexPath.item];\
    cell.imageName = _dataArray[indexPath.item];\
    return cell;\
\}\
\
//
\f1 \'c9\'e8\'d6\'c3\'c4\'b3\'d2\'bb\'b8\'f6\'cd\'f8\'b8\'f1\'b5\'c4\'b4\'f3\'d0\'a1
\f2 \
-(CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath\
\{\
    //
\f1 \'b2\'bb\'d2\'bb\'b6\'a8\'b6\'bc\'ca\'c7\'d5\'e2\'b8\'f6\'b4\'f3\'d0\'a1\'a3\'ac\'bf\'c9\'d2\'d4\'b8\'f9\'be\'dd\'d0\'e8\'c7\'f3\'c9\'e8\'d6\'c3\'c8\'ce\'d2\'e2\'d2\'bb\'b8\'f6
\f2 Item
\f1 \'b5\'c4\'b4\'f3\'d0\'a1\'a3\'ac\'b4\'f3\'d0\'a1\'b2\'bb\'c4\'dc\'b3\'ac\'b9\'fd
\f2 collectionView
\f1 \'b5\'c4
\f2 size\
    return CGSizeMake(120, 120);\
\}\
\
//
\f1 \'c9\'e8\'d6\'c3
\f2 collectionView
\f1 \'b5\'b1\'c7\'b0\'d2\'b3\'be\'e0\'c0\'eb\'cb\'c4\'d6\'dc\'b5\'c4\'b1\'df\'be\'e0
\f2 \
-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section\
\{\
    return UIEdgeInsetsMake(0, 10, 0, 10);\
\}\
\
//
\f1 \'c9\'e8\'d6\'c3\'d7\'ee\'d0\'a1\'d0\'d0\'bc\'e4\'be\'e0
\f2 \
-(CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section\
\{\
    return 10;\
\}\
\
//
\f1 \'c9\'e8\'d6\'c3\'d7\'ee\'d0\'a1\'c1\'d0\'bc\'e4\'be\'e0
\f2 \
-(CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section\
\{\
    return 0;\
\}\
\
//
\f1 \'d1\'a1\'d6\'d0\'c4\'b3\'d2\'bb\'b8\'f6
\f2 Item
\f1 \'ca\'b1\'b5\'f7\'d3\'c3\'b5\'c4\'b7\'bd\'b7\'a8
\f2 \
-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath\
\{\
    NSLog(@"
\f1 \'d1\'a1\'d6\'d0\'b5\'da
\f2 %ld
\f1 \'b8\'f6
\f2 ",indexPath.item);\
    NSLog(@"%@",_dataArray[indexPath.item]);\
\}\
\
}